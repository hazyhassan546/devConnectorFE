[{"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/index.js":"1","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/App.js":"2","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Navbar.js":"3","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Landing.js":"4","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Alert.js":"5","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/alertHelper.js":"6","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/apiHelper.js":"7","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/register/Register.js":"8","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/login/Login.js":"9","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/alert.js":"10","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/auth.js":"11","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/types.js":"12","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/store.js":"13","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/index.js":"14","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/alertReducer.js":"15","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/authReducer.js":"16","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/register/index.js":"17","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/connect/globalConnect.js":"18","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/authAPi.js":"19","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/common/routes.js":"20","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/setAuthToken.js":"21","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/login/index.js":"22","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/dashboard.js":"23","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/navigationHelper.js":"24","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/profileReducers.js":"25","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/profile.js":"26","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/profileApi.js":"27","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/spinner.js":"28","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/createProfile.js":"29","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/editProfile.js":"30","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/addExperience.js":"31","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/addEducation.js":"32","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/experience.js":"33","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/education.js":"34","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profiles.js":"35","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileItem.js":"36","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileScreen.js":"37","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/profileTop.js":"38","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/about.js":"39","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/experience.js":"40","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/education.js":"41","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/githubRepos.js":"42","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/post.js":"43","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/postReducer.js":"44","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/postApi.js":"45","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/allPosts.js":"46","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/postDetails.js":"47"},{"size":197,"mtime":1617895241657,"results":"48","hashOfConfig":"49"},{"size":2822,"mtime":1620294164502,"results":"50","hashOfConfig":"49"},{"size":1417,"mtime":1620214902525,"results":"51","hashOfConfig":"49"},{"size":940,"mtime":1619598749719,"results":"52","hashOfConfig":"49"},{"size":580,"mtime":1618227643805,"results":"53","hashOfConfig":"49"},{"size":377,"mtime":1618497462831,"results":"54","hashOfConfig":"49"},{"size":3658,"mtime":1620391998870,"results":"55","hashOfConfig":"49"},{"size":2654,"mtime":1619526658843,"results":"56","hashOfConfig":"49"},{"size":1609,"mtime":1619526590990,"results":"57","hashOfConfig":"49"},{"size":267,"mtime":1618491468710,"results":"58","hashOfConfig":"49"},{"size":1398,"mtime":1619782576468,"results":"59","hashOfConfig":"49"},{"size":4024,"mtime":1620385005887,"results":"60","hashOfConfig":"49"},{"size":462,"mtime":1618222361414,"results":"61","hashOfConfig":"49"},{"size":259,"mtime":1620204174010,"results":"62","hashOfConfig":"49"},{"size":396,"mtime":1618316105238,"results":"63","hashOfConfig":"49"},{"size":1480,"mtime":1619782110005,"results":"64","hashOfConfig":"49"},{"size":147,"mtime":1618305907152,"results":"65","hashOfConfig":"49"},{"size":566,"mtime":1620204298159,"results":"66","hashOfConfig":"49"},{"size":2185,"mtime":1619782082130,"results":"67","hashOfConfig":"49"},{"size":1047,"mtime":1620664883952,"results":"68","hashOfConfig":"49"},{"size":244,"mtime":1619515950058,"results":"69","hashOfConfig":"49"},{"size":138,"mtime":1619522631033,"results":"70","hashOfConfig":"49"},{"size":2068,"mtime":1619782345545,"results":"71","hashOfConfig":"49"},{"size":581,"mtime":1619528857092,"results":"72","hashOfConfig":"49"},{"size":2649,"mtime":1620147411525,"results":"73","hashOfConfig":"49"},{"size":4003,"mtime":1620385479883,"results":"74","hashOfConfig":"49"},{"size":5537,"mtime":1620392150024,"results":"75","hashOfConfig":"49"},{"size":384,"mtime":1619600065723,"results":"76","hashOfConfig":"49"},{"size":6844,"mtime":1619694037548,"results":"77","hashOfConfig":"49"},{"size":8472,"mtime":1620392030806,"results":"78","hashOfConfig":"49"},{"size":3226,"mtime":1619698448300,"results":"79","hashOfConfig":"49"},{"size":3303,"mtime":1619699839601,"results":"80","hashOfConfig":"49"},{"size":1275,"mtime":1619778936064,"results":"81","hashOfConfig":"49"},{"size":1301,"mtime":1619778365993,"results":"82","hashOfConfig":"49"},{"size":999,"mtime":1620062169557,"results":"83","hashOfConfig":"49"},{"size":1057,"mtime":1620664978416,"results":"84","hashOfConfig":"49"},{"size":1552,"mtime":1620146847513,"results":"85","hashOfConfig":"49"},{"size":1823,"mtime":1620665093577,"results":"86","hashOfConfig":"49"},{"size":589,"mtime":1620134763891,"results":"87","hashOfConfig":"49"},{"size":947,"mtime":1620136144207,"results":"88","hashOfConfig":"49"},{"size":1180,"mtime":1620140290310,"results":"89","hashOfConfig":"49"},{"size":1348,"mtime":1620149020245,"results":"90","hashOfConfig":"49"},{"size":2481,"mtime":1620297237326,"results":"91","hashOfConfig":"49"},{"size":2248,"mtime":1620297647141,"results":"92","hashOfConfig":"49"},{"size":3125,"mtime":1620295908375,"results":"93","hashOfConfig":"49"},{"size":3741,"mtime":1620294320971,"results":"94","hashOfConfig":"49"},{"size":3805,"mtime":1620298388035,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"75yxpx",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"98"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"98"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"98"},"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/index.js",[],["216","217"],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/App.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Navbar.js",["218"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\"></i> DevConnector\n        </Link>\n      </h1>\n      {!props.loading && (\n        <Fragment>\n          {props.auth.isAuthenticated ? (\n            <ul>\n              <li>\n                <Link to=\"/posts\">Posts</Link>\n              </li>\n              <li>\n                <Link to=\"/Profiles\">Developers</Link>\n              </li>\n              <li>\n                <a\n                  onClick={() => {\n                    props.logout();\n                    props.clearProfile();\n                  }}\n                >\n                  <i className=\"fas fa-sign-out-alt\"></i>\n                  <span className=\"hide-sm\">Logout</span>\n                </a>\n              </li>\n            </ul>\n          ) : (\n            <ul>\n              <li>\n                <Link to=\"/Profiles\">Developers</Link>\n              </li>\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n              <li>\n                <Link to=\"/Login\">Login</Link>\n              </li>\n            </ul>\n          )}\n        </Fragment>\n      )}\n    </nav>\n  );\n};\n\nexport default globalConnect()(Navbar);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Landing.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/Alert.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/alertHelper.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/apiHelper.js",["219"],"import axios from \"axios\";\n\nexport const ApiPost = async (url, body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  let res = {};\n  await axios\n    .post(url, JSON.stringify(body), config)\n    .then(function (response) {\n      res = response;\n      console.log(response.data);\n      console.log(response.status);\n      console.log(response.statusText);\n      console.log(response.headers);\n      console.log(response.config);\n    })\n    .catch(function (error) {\n      if (error.response) {\n        res = error.response.data;\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n\n  return res;\n};\n\nexport const ApiGet = async (url) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return await axios.get(url, config);\n};\n\nexport const ApiPut = async (url, body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  let res = {};\n  await axios\n    .put(url, JSON.stringify(body), config)\n    .then(function (response) {\n      res = response;\n      console.log(response.data);\n      console.log(response.status);\n      console.log(response.statusText);\n      console.log(response.headers);\n      console.log(response.config);\n    })\n    .catch(function (error) {\n      if (error.response) {\n        res = error.response.data;\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n\n  return res;\n};\n\nexport const ApiDelete = async (url) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  let res = {};\n  await axios\n    .post(url, config)\n    .then(function (response) {\n      res = response;\n      console.log(response.data);\n      console.log(response.status);\n      console.log(response.statusText);\n      console.log(response.headers);\n      console.log(response.config);\n    })\n    .catch(function (error) {\n      if (error.response) {\n        res = error.response.data;\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n\n  return res;\n};\n\nexport const ApiImagePost = async (url, body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  let res = {};\n  await axios\n    .post(url, body, {})\n    .then(function (response) {\n      res = response;\n      console.log(response.data);\n      console.log(response.status);\n      console.log(response.statusText);\n      console.log(response.headers);\n      console.log(response.config);\n    })\n    .catch(function (error) {\n      if (error.response) {\n        res = error.response.data;\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n\n  return res;\n};\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/register/Register.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/login/Login.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/alert.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/auth.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/types.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/store.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/index.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/alertReducer.js",["220"],"import { SET_ALERT, REMOVE_ALERT } from \"../action/types\";\n\nconst initialState = [];\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT: {\n      return [...state, payload];\n    }\n    case REMOVE_ALERT: {\n      return state.filter((alert) => alert.id !== payload);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/authReducer.js",["221"],"import {\n  AUTH_ERROR,\n  DELETE_ACCOUNT,\n  DELETE_ACCOUNT_ERROR,\n  DELETE_ACCOUNT_SUCCESS,\n  LOAD_USER,\n  LOGIN_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_USER,\n  LOGOUT,\n  REGISTER_USER,\n  REGISTER_USER_FAILED,\n  REGISTER_USER_SUCCESS,\n  USER_LOADED,\n} from \"../action/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: false,\n  user: null,\n};\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_USER:\n    case LOGIN_USER:\n    case DELETE_ACCOUNT:\n    case REGISTER_USER: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case USER_LOADED: {\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: payload?.user,\n      };\n    }\n    case REGISTER_USER_SUCCESS:\n    case LOGIN_SUCCESS: {\n      localStorage.setItem(\"token\", payload?.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    }\n    case AUTH_ERROR:\n    case LOGIN_ERROR:\n    case LOGOUT:\n    case DELETE_ACCOUNT_SUCCESS:\n    case REGISTER_USER_FAILED: {\n      localStorage.setItem(\"token\", null);\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: false,\n      };\n    }\n    case DELETE_ACCOUNT_ERROR: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/register/index.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/connect/globalConnect.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/authAPi.js",["222","223","224","225"],"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiDelete, ApiPost } from \"../../helpers/apiHelper\";\nimport setAuthToken from \"../../helpers/setAuthToken\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\n\nexport const loadUser = async () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"api/auth\");\n    store.dispatch(authActionCreator.userLoaded(res.data));\n  } catch (error) {\n    store.dispatch(authActionCreator.authError());\n  }\n};\n\nexport const registerAPI = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n    if (!res.errors) {\n      AlertHelper({\n        msg: \"User Registered Successfully\",\n        alertType: \"success\",\n      });\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.registerUserFailed());\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};\n\nexport const loginApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.login, params);\n    if (res.data) {\n      AlertHelper({\n        msg: \"User Login Successfully\",\n        alertType: \"success\",\n      });\n      store.dispatch(authActionCreator.loginSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.loginError());\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {\n    store.dispatch(authActionCreator.loginError());\n  }\n};\n\nexport const deleteAccountApi = async () => {\n  try {\n    const res = await ApiDelete(ENDPOINTS.deleteProfile);\n    store.dispatch(authActionCreator.deleteAccountSuccess());\n  } catch (error) {\n    store.dispatch(authActionCreator.deleteAccountError());\n  }\n};\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/common/routes.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/setAuthToken.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/auth/login/index.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/dashboard.js",["226"],"import React, { Fragment, useEffect } from \"react\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport { Link } from \"react-router-dom\";\nimport Experience from \"./experience\";\nimport Education from \"./education\";\n\nfunction Dashboard(props) {\n  useEffect(() => {\n    props.getUserProfile();\n  }, []);\n  return props.profile.loading ? (\n    <Spinner />\n  ) : props.profile?.profile !== null ? (\n    <Fragment>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\">Welcome {props?.auth?.user?.name} </i>\n        <div class=\"dash-buttons\">\n          <Link to=\"edit-profile\" class=\"btn btn-light\">\n            <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile\n          </Link>\n          <Link to=\"add-experience\" class=\"btn btn-light\">\n            <i class=\"fab fa-black-tie text-primary\"></i> Add Experience\n          </Link>\n          <Link to=\"add-education\" class=\"btn btn-light\">\n            <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education\n          </Link>\n        </div>\n      </p>\n      {props?.profile?.profile?.experience?.length > 0 && (\n        <Experience experience={props.profile.profile.experience} {...props} />\n      )}\n      {props?.profile?.profile?.education?.length > 0 && (\n        <Education education={props.profile.profile.education} {...props} />\n      )}\n\n      <button\n        onClick={() => {\n          props.deleteAccount();\n        }}\n        className=\"btn btn-danger\"\n      >\n        <i className=\"fas fa-user\" />\n        Delete Your Account\n      </button>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome {props?.auth?.user?.name}\n      </p>\n      <p className=\"my-1\">You don't have setup your profile!</p>\n      <Link className=\"btn btn-primary\" to=\"/create-profile\">\n        Create Profile\n      </Link>\n    </Fragment>\n  );\n}\n\nDashboard.propTypes = {};\n\nexport default globalConnect()(Dashboard);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/navigationHelper.js",["227"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../redux/connect/globalConnect\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction PrivateRoutes({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/Login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n\nPrivateRoutes.propTypes = {};\n\nexport default globalConnect()(PrivateRoutes);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/profileReducers.js",["228","229","230","231"],"import {\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_SUCCESS,\n  GET_USER_PROFILE_ERROR,\n  CLEAR_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_SUCCESS,\n  CREATE_OR_UPDATE_USER_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_ERROR,\n  ADD_EXPERIENCE,\n  ADD_EXPERIENCE_ERROR,\n  ADD_EXPERIENCE_SUCCESS,\n  ADD_EDUCATION,\n  ADD_EDUCATION_SUCCESS,\n  DELETE_EDUCATION,\n  DELETE_EXPERIENCE,\n  DELETE_EDUCATION_SUCCESS,\n  DELETE_EXPERIENCE_ERROR,\n  DELETE_EXPERIENCE_SUCCESS,\n  DELETE_EDUCATION_ERROR,\n  GET_ALL_USER_PROFILE,\n  GET_ALL_USER_PROFILE_ERROR,\n  GET_ALL_USER_PROFILE_SUCCESS,\n  GET_GITHUB_REPO,\n  GET_GITHUB_REPO_SUCCESS,\n  GET_GITHUB_REPO_ERROR,\n  GET_USER_PROFILE_BY_ID,\n  GET_USER_PROFILE_BY_ID_SUCCESS,\n  GET_USER_PROFILE_BY_ID_ERROR,\n} from \"../action/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: null,\n  repos: [],\n  loading: false,\n  error: {},\n};\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CREATE_OR_UPDATE_USER_PROFILE:\n    case ADD_EXPERIENCE:\n    case ADD_EDUCATION:\n    case DELETE_EDUCATION:\n    case GET_ALL_USER_PROFILE:\n    case DELETE_EXPERIENCE:\n    // case GET_GITHUB_REPO:\n    case GET_USER_PROFILE_BY_ID:\n    case GET_USER_PROFILE: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case CREATE_OR_UPDATE_USER_PROFILE_SUCCESS:\n    case ADD_EXPERIENCE_SUCCESS:\n    case ADD_EDUCATION_SUCCESS:\n    case DELETE_EDUCATION_SUCCESS:\n    case DELETE_EXPERIENCE_SUCCESS:\n    case GET_USER_PROFILE_BY_ID_SUCCESS:\n    case GET_USER_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        profile: payload,\n      };\n    }\n    case GET_ALL_USER_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    }\n    case GET_GITHUB_REPO_SUCCESS: {\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    }\n    case CREATE_OR_UPDATE_USER_PROFILE_ERROR:\n    case GET_ALL_USER_PROFILE_ERROR:\n    case ADD_EXPERIENCE_ERROR:\n    case ADD_EXPERIENCE_ERROR:\n    case GET_USER_PROFILE_BY_ID_ERROR:\n    case DELETE_EXPERIENCE_ERROR:\n    case DELETE_EDUCATION_ERROR:\n    case GET_USER_PROFILE_ERROR: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case GET_GITHUB_REPO_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        repos: [],\n      };\n    }\n\n    case CLEAR_PROFILE: {\n      return {\n        ...state,\n        profile: null,\n        profiles: null,\n        repos: [],\n        loading: false,\n        error: {},\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/profile.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/profileApi.js",["232","233","234","235","236","237"],"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiGet, ApiImagePost, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\n\nexport const getUserProfileApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.profile);\n    store.dispatch(profileActionCreator.getUserProfileSuccess(res.data));\n  } catch (error) {\n    store.dispatch(profileActionCreator.getUserProfileFailed());\n  }\n};\n\nexport const createOrUpdateApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.createUpdateProfile, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.createOrUpdateProfileError());\n    } else {\n      store.dispatch(\n        profileActionCreator.createOrUpdateProfileSuccess(res.data)\n      );\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: !params?.edit\n          ? \"Profile created successfully\"\n          : \"Profile updated successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.createOrUpdateProfileError());\n  }\n};\n\nexport const addExperienceApi = async (params) => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addExperience, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addExperienceProfileError());\n    } else {\n      store.dispatch(profileActionCreator.addExperienceSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Experience added successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addExperienceProfileError());\n  }\n};\n\nexport const addEducationApi = async (params) => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addEducation, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addEducationError());\n    } else {\n      store.dispatch(profileActionCreator.addEducationSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Education added successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addEducationError());\n  }\n};\n\nexport const deleteEducationAPi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deleteEducation, params);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n      });\n      store.dispatch(profileActionCreator.deleteEducationError());\n    } else {\n      store.dispatch(profileActionCreator.deleteEducationSuccess(res.data));\n      AlertHelper({\n        msg: \"Education deleted successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteEducationError());\n  }\n};\n\nexport const deleteExperienceApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deleteExperience, params);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n      });\n      store.dispatch(profileActionCreator.deleteExperienceError());\n    } else {\n      store.dispatch(profileActionCreator.deleteExperienceSuccess(res.data));\n      AlertHelper({\n        msg: \"Experience deleted successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteExperienceError());\n  }\n};\n\nexport const getAllProfilesApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.getAllProfiles);\n    store.dispatch(profileActionCreator.getAllUserProfilesSuccess(res.data));\n  } catch (error) {\n    store.dispatch(profileActionCreator.getAllUserProfileError());\n  }\n};\n\nexport const getGithubRepoApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.getAllGithubRepo, params);\n    if (res.errors) {\n      // res.errors.map((item) => {\n      //   AlertHelper({\n      //     msg: item.msg,\n      //     alertType: \"danger\",\n      //   });\n      // });\n      store.dispatch(profileActionCreator.getGithubRepoError());\n    } else {\n      store.dispatch(profileActionCreator.getGithubRepoSuccess(res.data));\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.getGithubRepoError());\n  }\n};\n\nexport const getUserProfileByIDApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.profileById, params);\n    store.dispatch(profileActionCreator.getUserProfileByIdSuccess(res.data));\n  } catch (error) {\n    store.dispatch(profileActionCreator.getUserProfileByIdError());\n  }\n};\n\nexport const uploadingImageApi = async (params) => {\n  try {\n    const res = await ApiImagePost(ENDPOINTS.profileImage, params);\n    store.dispatch(profileActionCreator.uploadProfileImageSuccess(res.data));\n    AlertHelper({\n      msg: \"Image Updated Successfully\",\n      alertType: \"success\",\n    });\n  } catch (error) {\n    store.dispatch(profileActionCreator.uploadProfileImageError());\n  }\n};\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/components/layouts/spinner.js",["238"],"import React, { Fragment } from \"react\";\nimport spinner from \"../../img/spinner.gif\"\nimport PropTypes from \"prop-types\";\n\nfunction Spinner(props) {\n  return (\n    <Fragment>\n      <img\n        src={spinner}\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n        alt=\"Loading....\"\n      />\n    </Fragment>\n  );\n}\n\nSpinner.propTypes = {};\n\nexport default Spinner;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/createProfile.js",["239","240","241"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction CreateProfile(props) {\n  let history = useHistory();\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: [], // comma separated array\n    bio: \"\",\n    githubUserName: \"\",\n    experience: [], // array\n    education: [], // array\n    youtube: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    linkedin: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.createOrUpdateProfile({ formData, history });\n  };\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills, // comma separated array\n    bio,\n    githubUserName,\n    experience, // array\n    education, // array\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin,\n  } = formData;\n\n  return props.profile.loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <section class=\"container\">\n        <h1 class=\"large text-primary\">Create Your Profile</h1>\n        <p class=\"lead\">\n          <i class=\"fas fa-user\"></i> Let's get some information to make your\n          profile stand out\n        </p>\n        <small>* = required field</small>\n        <form\n          class=\"form\"\n          onSubmit={(e) => {\n            submitForm(e);\n          }}\n        >\n          <div class=\"form-group\">\n            <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n              <option value=\"0\">* Select Professional Status</option>\n              <option value=\"Developer\">Developer</option>\n              <option value=\"Junior Developer\">Junior Developer</option>\n              <option value=\"Senior Developer\">Senior Developer</option>\n              <option value=\"Manager\">Manager</option>\n              <option value=\"Student or Learning\">Student or Learning</option>\n              <option value=\"Instructor\">Instructor or Teacher</option>\n              <option value=\"Intern\">Intern</option>\n              <option value=\"Other\">Other</option>\n            </select>\n            <small class=\"form-text\">\n              Give us an idea of where you are at in your career\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"company\"\n              value={company}\n              onChange={(e) => onChange(e)}\n            />\n            <small class=\"form-text\">\n              Could be your own company or one you work for\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Website\"\n              name=\"website\"\n              onChange={(e) => onChange(e)}\n              value={website}\n            />\n            <small class=\"form-text\">\n              Could be your own or a company website\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Location\"\n              name=\"location\"\n              onChange={(e) => onChange(e)}\n              value={location}\n            />\n            <small class=\"form-text\">\n              City & state suggested (eg. Boston, MA)\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"* Skills\"\n              name=\"skills\"\n              onChange={(e) => onChange(e)}\n              value={skills}\n            />\n            <small class=\"form-text\">\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Github Username\"\n              name=\"githubUserName\"\n              onChange={(e) => onChange(e)}\n              value={githubUserName}\n            />\n            <small class=\"form-text\">\n              If you want your latest repos and a Github link, include your\n              username\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              placeholder=\"A short bio of yourself\"\n              name=\"bio\"\n              onChange={(e) => onChange(e)}\n              value={bio}\n            ></textarea>\n            <small class=\"form-text\">Tell us a little about yourself</small>\n          </div>\n\n          <div class=\"my-2\">\n            <button type=\"button\" class=\"btn btn-light\">\n              Add Social Network Links\n            </button>\n            <span>Optional</span>\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-twitter fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Twitter URL\"\n              name=\"twitter\"\n              onChange={(e) => onChange(e)}\n              value={twitter}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-facebook fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Facebook URL\"\n              name=\"facebook\"\n              onChange={(e) => onChange(e)}\n              value={facebook}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-youtube fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"YouTube URL\"\n              name=\"youtube\"\n              onChange={(e) => onChange(e)}\n              value={youtube}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-linkedin fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Linkedin URL\"\n              name=\"linkedin\"\n              onChange={(e) => onChange(e)}\n              value={linkedin}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-instagram fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Instagram URL\"\n              name=\"instagram\"\n              onChange={(e) => onChange(e)}\n              value={instagram}\n            />\n          </div>\n          <input type=\"submit\" class=\"btn btn-primary my-1\" />\n          <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\n            Go Back\n          </Link>\n        </form>\n      </section>\n    </Fragment>\n  );\n}\n\nCreateProfile.propTypes = {};\n\nexport default globalConnect()(CreateProfile);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/editProfile.js",["242","243","244","245","246","247","248"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nfunction EditProfile(props) {\n  let history = useHistory();\n  let loading = props?.profile?.loading;\n  let profile = props?.profile?.profile;\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: [], // comma separated array\n    bio: \"\",\n    githubUserName: \"\",\n    experience: [], // array\n    education: [], // array\n    youtube: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    linkedin: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  useEffect(() => {\n    props.getUserProfile();\n  }, []);\n  useEffect(() => {\n    console.log(profile);\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubUserName:\n        loading || !profile.githubUserName ? \"\" : profile.githubUserName,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile?.social?.twitter,\n      facebook: loading || !profile.social ? \"\" : profile?.social?.facebook,\n      instagram: loading || !profile.social ? \"\" : profile?.social?.instagram,\n      linkedin: loading || !profile.social ? \"\" : profile?.social?.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile?.social?.youtube,\n    });\n  }, [loading]);\n\n  const selectImage = (e) => {\n    console.log(e.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", e.target.files[0]);\n    props.uploadProfileImage(formData);\n  };\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.createOrUpdateProfile({ formData, history, edit: true });\n  };\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills, // comma separated array\n    bio,\n    githubUserName,\n    experience, // array\n    education, // array\n    youtube,\n    twitter,\n    facebook,\n    instagram,\n    linkedin,\n  } = formData;\n\n  return props.profile.loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <section class=\"container\">\n        <h1 class=\"large text-primary\">Edit Your Profile</h1>\n        {/* <p class=\"lead\">\n          <i class=\"fas fa-user\"></i> Let's get some information to make your\n          profile stand out\n        </p> */}\n        {/* <small>* = required field</small> */}\n        <label for=\"favcolor\">Change Profile Image : </label>\n        <input\n          type=\"file\"\n          class=\"btn btn-primary my-1\"\n          onChange={(e) => {\n            selectImage(e);\n          }}\n        />\n        <form\n          class=\"form\"\n          onSubmit={(e) => {\n            submitForm(e);\n          }}\n        >\n          <div class=\"form-group\">\n            <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n              <option value=\"0\">* Select Professional Status</option>\n              <option value=\"Developer\">Developer</option>\n              <option value=\"Junior Developer\">Junior Developer</option>\n              <option value=\"Senior Developer\">Senior Developer</option>\n              <option value=\"Manager\">Manager</option>\n              <option value=\"Student or Learning\">Student or Learning</option>\n              <option value=\"Instructor\">Instructor or Teacher</option>\n              <option value=\"Intern\">Intern</option>\n              <option value=\"Other\">Other</option>\n            </select>\n            <small class=\"form-text\">\n              Give us an idea of where you are at in your career\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"company\"\n              value={company}\n              onChange={(e) => onChange(e)}\n            />\n            <small class=\"form-text\">\n              Could be your own company or one you work for\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Website\"\n              name=\"website\"\n              onChange={(e) => onChange(e)}\n              value={website}\n            />\n            <small class=\"form-text\">\n              Could be your own or a company website\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Location\"\n              name=\"location\"\n              onChange={(e) => onChange(e)}\n              value={location}\n            />\n            <small class=\"form-text\">\n              City & state suggested (eg. Boston, MA)\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"* Skills\"\n              name=\"skills\"\n              onChange={(e) => onChange(e)}\n              value={skills}\n            />\n            <small class=\"form-text\">\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Github Username\"\n              name=\"githubUserName\"\n              onChange={(e) => onChange(e)}\n              value={githubUserName}\n            />\n            <small class=\"form-text\">\n              If you want your latest repos and a Github link, include your\n              username\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <textarea\n              placeholder=\"A short bio of yourself\"\n              name=\"bio\"\n              onChange={(e) => onChange(e)}\n              value={bio}\n            ></textarea>\n            <small class=\"form-text\">Tell us a little about yourself</small>\n          </div>\n\n          <div class=\"my-2\">\n            <button type=\"button\" class=\"btn btn-light\">\n              Add Social Network Links\n            </button>\n            <span>Optional</span>\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-twitter fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Twitter URL\"\n              name=\"twitter\"\n              onChange={(e) => onChange(e)}\n              value={twitter}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-facebook fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Facebook URL\"\n              name=\"facebook\"\n              onChange={(e) => onChange(e)}\n              value={facebook}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-youtube fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"YouTube URL\"\n              name=\"youtube\"\n              onChange={(e) => onChange(e)}\n              value={youtube}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-linkedin fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Linkedin URL\"\n              name=\"linkedin\"\n              onChange={(e) => onChange(e)}\n              value={linkedin}\n            />\n          </div>\n\n          <div class=\"form-group social-input\">\n            <i class=\"fab fa-instagram fa-2x\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Instagram URL\"\n              name=\"instagram\"\n              onChange={(e) => onChange(e)}\n              value={instagram}\n            />\n          </div>\n          <input type=\"submit\" class=\"btn btn-primary my-1\" />\n          <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\n            Go Back\n          </Link>\n        </form>\n      </section>\n    </Fragment>\n  );\n}\n\nEditProfile.propTypes = {};\n\nexport default globalConnect()(EditProfile);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/addExperience.js",["249"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport { Link } from \"react-router-dom\";\n\nfunction AddExperience(props) {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    company: \"\",\n    from: \"\",\n    to: \"\",\n    location: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.addExperience({ formData, history: props.history });\n  };\n\n  const { title, company, from, to, location, current, description } = formData;\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Add An Experience</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        class=\"form\"\n        onSubmit={(e) => {\n          submitForm(e);\n        }}\n      >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            required\n            onChange={(e) => onChange(e)}\n            value={title}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            required\n            onChange={(e) => onChange(e)}\n            value={company}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            onChange={(e) => onChange(e)}\n            value={location}\n          />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              value={current}\n              onChange={(e) =>\n                setFormData({\n                  ...formData,\n                  current: !current,\n                })\n              }\n            />\n            Current Job\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n}\n\nAddExperience.propTypes = {};\n\nexport default globalConnect()(AddExperience);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/addEducation.js",["250"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport { Link } from \"react-router-dom\";\n\nfunction AddEducation(props) {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.addEducation({ formData, history: props.history });\n  };\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Add Your Education</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        class=\"form\"\n        onSubmit={(e) => {\n          submitForm(e);\n        }}\n      >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            required\n            onChange={(e) => onChange(e)}\n            value={school}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            required\n            onChange={(e) => onChange(e)}\n            value={degree}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field Of Study\"\n            name=\"fieldofstudy\"\n            onChange={(e) => onChange(e)}\n            value={fieldofstudy}\n          />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            onChange={(e) => onChange(e)}\n            value={from}\n          />\n        </div>\n        <div class=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              onChange={(e) =>\n                setFormData({\n                  ...formData,\n                  current: !current,\n                })\n              }\n              value={current}\n            />\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            onChange={(e) => onChange(e)}\n            value={to}\n          />\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            onChange={(e) => onChange(e)}\n            value={description}\n            placeholder=\"Program Description\"\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n}\n\nAddEducation.propTypes = {};\n\nexport default globalConnect()(AddEducation);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/experience.js",["251"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nfunction Experience(props) {\n  const renderExperiences = props.experience.map((exp) => {\n    return (\n      <tr key={exp._id}>\n        <td>{exp.company}</td>\n        <td className=\"hide sm\">{exp.title}</td>\n        <td>\n          <Moment format={\"YYYY/MM/DD\"}>{exp.from}</Moment> -\n          {exp.to === null ? (\n            \"Now\"\n          ) : (\n            <Moment format={\"YYYY/MM/DD\"}>{exp.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button \n           onClick={() => {\n            props.deleteExperience({\n              exp_id: exp._id,\n            });\n          }}\n          className=\"btn btn-danger\">Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\"> Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderExperiences}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n}\n\nExperience.propTypes = {};\n\nexport default Experience;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/dashboard/education.js",["252","253"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nfunction Education(props) {\n  const renderEducation = props.education.map((edu) => {\n    return (\n      <tr key={edu._id}>\n        <td>{edu.school}</td>\n        <td className=\"hide sm\">{edu.degree}</td>\n        <td>\n          <Moment format={\"YYYY/MM/DD\"}>{edu.from}</Moment> -\n          {edu.to === null ? (\n            \"Now\"\n          ) : (\n            <Moment format={\"YYYY/MM/DD\"}>{edu.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.deleteEducation({\n                edu_id: edu._id,\n              });\n            }}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\"> Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{renderEducation}</tbody>\n      </table>\n    </Fragment>\n  );\n}\n\nEducation.propTypes = {};\n\nexport default Education;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profiles.js",["254","255"],"import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport ProfileItem from \"./profileItem\";\nfunction Profiles(props) {\n  useEffect(() => {\n    props.getAllUserProfiles();\n  }, []);\n  return props?.profile?.loading ? (\n    <Spinner></Spinner>\n  ) : (\n    <Fragment>\n      <h1 className={\"large text-primary\"}>Developers</h1>\n      <p className={\"lead\"}>\n        <i className=\"fab fa-connectdevelop\"></i> Browse and connect with\n        Developers\n      </p>\n      <div className=\"profiles\">\n        {props?.profile?.profiles?.length > 0 ? (\n          props?.profile?.profiles?.map((item) => {\n            return <ProfileItem key={item?._id} profile={item} />;\n          })\n        ) : (\n          <h4>No Profiles found</h4>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nProfiles.propTypes = {};\n\nexport default globalConnect()(Profiles);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileItem.js",["256"],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileScreen.js",["257","258"],"import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport About from \"./profileComponents/about\";\nimport Education from \"./profileComponents/education\";\nimport Experience from \"./profileComponents/experience\";\nimport GithubRepo from \"./profileComponents/githubRepos\";\nimport ProfileTop from \"./profileComponents/profileTop\";\n\nconst ProfileScreen = (props) => {\n  useEffect(() => {\n    props.getUserProfileById({ userId: props.match.params.id });\n  }, []);\n  return (\n    <Fragment>\n      {props.profile.loading ? (\n        <Spinner></Spinner>\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" class=\"btn btn-light\">\n            Go back to profiles\n          </Link>\n          {props.auth.isAuthenticated &&\n            props.profile.loading == false &&\n            props.auth.user._id === props.match.params.id && (\n              <Link to=\"/edit-profile\" class=\"btn btn-light\">\n                <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile\n              </Link>\n            )}\n          <div class=\"profile-grid my-1\">\n            <ProfileTop {...props} />\n            <About {...props} />\n          </div>\n          <Experience {...props} />\n          <Education {...props} />\n          {props?.profile?.profile?.githubUserName && <GithubRepo {...props} />}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default globalConnect()(ProfileScreen);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/profileTop.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/about.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/experience.js",["259"],"import React from \"react\";\nimport Moment from \"react-moment\";\n\nconst Experience = (props) => {\n  const profile = props.profile.profile;\n  return (\n    <div class=\"profile-exp bg-white p-2\">\n      <h2 class=\"text-primary\">Experience</h2>\n      {profile?.experience?.length > 0 ? (\n        profile?.experience?.map((item) => {\n          return (\n            <div>\n              <h3 class=\"text-dark\">{item?.company}</h3>\n              <p>\n              <Moment format={\"YYYY/MM/DD\"}>{item?.from}</Moment> - {item.current == true ? \"Current\" : <Moment format={\"YYYY/MM/DD\"}>{item?.to}</Moment>}\n              </p>\n              <p>\n                <strong>Position: </strong>{item?.title}\n              </p>\n              <p>\n                <strong>Description: </strong>{item.description}\n              </p>\n            </div>\n          );\n        })\n      ) : (\n        <p>No Experience</p>\n      )}\n    </div>\n  );\n};\n\nexport default Experience;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/education.js",["260"],"import React from \"react\";\nimport Moment from \"react-moment\";\n\nconst Education = (props) => {\n  const profile = props.profile.profile;\n  return (\n    <div class=\"profile-edu bg-white p-2\">\n      <h2 class=\"text-primary\">Education</h2>\n      {profile?.education?.length > 0 ? (\n        profile?.education?.map((item) => {\n          return (\n            <div>\n              <h3>{item?.school}</h3>\n              <p>\n                <Moment format={\"YYYY/MM/DD\"}>{item?.from}</Moment> -\n                {item.current == true ? (\n                  \"Current\"\n                ) : (\n                  <Moment format={\"YYYY/MM/DD\"}>{item?.to}</Moment>\n                )}\n              </p>\n              <p>\n                <strong>Degree: </strong>\n                {item?.degree}\n              </p>\n              <p>\n                <strong>Field Of Study: </strong>\n                {item?.fieldofstudy}\n              </p>\n              <p>\n                <strong>Description: </strong>\n                {item?.description}\n              </p>\n            </div>\n          );\n        })\n      ) : (\n        <p>No Education Added</p>\n      )}\n    </div>\n  );\n};\n\nexport default Education;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileComponents/githubRepos.js",["261","262","263"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GithubRepo = (props) => {\n  useEffect(() => {\n    props?.getGithubRepo({\n      github_usr_name: props?.profile?.profile?.githubUserName,\n    });\n  }, []);\n  return (\n    <div class=\"profile-github\">\n      <h2 class=\"text-primary my-1\">\n        <i class=\"fab fa-github\"></i> Github Repos\n      </h2>\n\n      {props?.profile?.repos?.length === 0 ? (\n        <p>No Github Repo Found</p>\n      ) : (\n        props?.profile?.repos?.map((item) => {\n          return (\n            <div class=\"repo bg-white p-1 my-1\">\n              <div>\n                <h4>\n                  <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {item?.name}\n                  </a>\n                </h4>\n                <p>{item?.description}</p>\n              </div>\n              <div>\n                <ul>\n                  <li class=\"badge badge-primary\">\n                    Stars: {item?.stargazers_count}\n                  </li>\n                  <li class=\"badge badge-dark\">Watchers: {item?.watchers}</li>\n                  <li class=\"badge badge-light\">Forks: {item?.forks_count}</li>\n                </ul>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nGithubRepo.propTypes = {};\n\nexport default GithubRepo;\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/post.js",[],"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/postReducer.js",["264","265"],"import {\n  ADD_COMMENT_SUCCESS,\n  CREATE_POST_SUCCESS,\n  DELETE_COMMENT_SUCCESS,\n  DELETE_POST_SUCCESS,\n  GET_ALL_POST,\n  GET_ALL_POST_ERROR,\n  GET_ALL_POST_SUCCESS,\n  GET_SINGLE_POST,\n  GET_SINGLE_POST_ERROR,\n  GET_SINGLE_POST_SUCCESS,\n  LIKE_POST_SUCCESS,\n  UNLIKE_POST,\n  UNLIKE_POST_SUCCESS,\n} from \"../action/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: false,\n  error: {},\n};\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_SINGLE_POST_SUCCESS:\n    case ADD_COMMENT_SUCCESS:\n    case DELETE_COMMENT_SUCCESS: {\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    }\n    case GET_SINGLE_POST:\n    case GET_ALL_POST: {\n      return {\n        ...state,\n        loading: true,\n        post: null,\n      };\n    }\n    case GET_ALL_POST_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        posts: payload,\n      };\n    }\n    case GET_SINGLE_POST_ERROR:\n    case GET_ALL_POST_ERROR: {\n      return {\n        ...state,\n        post: null,\n        loading: false,\n      };\n    }\n    case LIKE_POST_SUCCESS: {\n      let index = state.posts.map((item) => item._id).indexOf(payload.postId);\n      let temp = state.posts;\n      if (index !== -1) {\n        temp[index].likes = payload.data;\n      }\n      return {\n        ...state,\n        loading: false,\n        posts: temp,\n      };\n    }\n    case UNLIKE_POST_SUCCESS: {\n      let index = state.posts.map((item) => item._id).indexOf(payload.postId);\n      let temp = state.posts;\n      if (index !== -1) {\n        temp[index].likes = payload.data;\n      }\n      return {\n        ...state,\n        loading: false,\n        posts: temp,\n      };\n    }\n    case CREATE_POST_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        posts: [payload, ...state.posts],\n      };\n    }\n    case DELETE_POST_SUCCESS: {\n      let index = state.posts.map((item) => item._id).indexOf(payload.postId);\n      let temp = state.posts;\n      if (index !== -1) {\n        temp.splice(index, 1);\n      }\n      return {\n        ...state,\n        loading: false,\n        posts: temp,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/postApi.js",["266","267","268"],"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiGet, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { postActionCreator } from \"../action/post\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\n\nexport const getAllPostApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.getAllPost);\n    store.dispatch(postActionCreator.getAllPostSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.getAllPostError());\n  }\n};\n\nexport const getSinglePostApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.getPostById, params);\n    store.dispatch(postActionCreator.getSinglePostSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.getSinglePostError());\n  }\n};\n\nexport const likePostAPi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.likePost, params);\n    if (res.msg) {\n      AlertHelper({\n        msg: res.msg,\n        alertType: \"danger\",\n      });\n      store.dispatch(postActionCreator.likePostError());\n    } else {\n      store.dispatch(postActionCreator.likePostSuccess({ ...res, ...params }));\n    }\n  } catch (error) {\n    store.dispatch(postActionCreator.likePostError());\n  }\n};\n\nexport const unlikePostApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.unlikePost, params);\n    if (res.msg) {\n      AlertHelper({\n        msg: res.msg,\n        alertType: \"danger\",\n      });\n      store.dispatch(postActionCreator.likePostError());\n    } else {\n      store.dispatch(\n        postActionCreator.unlikePostSuccess({ ...res, ...params })\n      );\n    }\n  } catch (error) {\n    store.dispatch(postActionCreator.unlikePostError());\n  }\n};\n\nexport const createPostApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.createPost, params);\n    store.dispatch(postActionCreator.createPostSuccess(res.data));\n    AlertHelper({\n      msg: \"Post Created Successfully.\",\n      alertType: \"success\",\n    });\n  } catch (error) {\n    store.dispatch(postActionCreator.createPostError());\n  }\n};\n\nexport const deletePostApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deletePost, params);\n    store.dispatch(\n      postActionCreator.deletePostSuccess({ ...res.data, ...params })\n    );\n    AlertHelper({\n      msg: \"Post Deleted Successfully.\",\n      alertType: \"success\",\n    });\n  } catch (error) {\n    store.dispatch(postActionCreator.deletePostError());\n  }\n};\n\nexport const addCommentApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.addPostComment, params);\n    store.dispatch(postActionCreator.addCommentSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.addCommentError());\n  }\n};\n\nexport const deleteCommentApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deletePostComment, params);\n    store.dispatch(postActionCreator.deleteCommentSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.deleteCommentError());\n  }\n};\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/allPosts.js",["269","270"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst AllPostsScreen = (props) => {\n  const [formData, setFormData] = useState({\n    text: \"\",\n  });\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (formData.text !== \"\") {\n      props.createPost(formData);\n      setFormData({\n        text: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    props.getAllPosts();\n  }, []);\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Posts</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-user\"></i> Welcome to the community!\n      </p>\n      <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Say Something...</h3>\n        </div>\n        <form class=\"form my-1\" onSubmit={(e) => submitForm(e)}>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            onChange={(e) => onChange(e)}\n            rows=\"5\"\n            value={formData.text}\n            placeholder=\"Create a post\"\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n      {props.post.posts.length > 0 ? (\n        props.post.posts.map((item) => {\n          return (\n            <div class=\"post bg-white p-1 my-1\">\n              <div>\n                <a href=\"profile.html\">\n                  <img class=\"round-img\" src={item.avatar} alt=\"\" />\n                  <h4>{item?.name}</h4>\n                </a>\n              </div>\n              <div>\n                <p class=\"my-1\">{item.text}</p>\n                <p class=\"post-date\">\n                  Posted on <Moment format={\"YYYY/MM/DD\"}>{item?.date}</Moment>\n                </p>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.likePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-up\"></i>\n                  <span>{item.likes.length}</span>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.unlikePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-down\"></i>\n                </button>\n                <Link to={`postDetail/${item._id}`} class=\"btn btn-primary\">\n                  Discussion\n                  {item?.comments?.length > 0 && (\n                    <span class=\"comment-count\">{item?.comments?.length}</span>\n                  )}\n                </Link>\n\n                {item?.user === props.auth.user._id &&\n                  props.post.loading === false && (\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-danger\"\n                      onClick={() => {\n                        props.deletePost({\n                          postId: item._id,\n                        });\n                      }}\n                    >\n                      <i class=\"fas fa-times\"></i>\n                    </button>\n                  )}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <p>No Post found</p>\n      )}\n    </Fragment>\n  );\n};\n\nAllPostsScreen.propTypes = {};\n\nexport default globalConnect()(AllPostsScreen);\n","/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/postDetails.js",["271","272"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/layouts/spinner\";\n\nconst PostDetails = (props) => {\n  const [formData, setFormData] = useState({\n    text: \"\",\n    postId: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      postId: props?.post?.post?._id,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (formData.text !== \"\") {\n      props.addComment(formData);\n    }\n  };\n  useEffect(() => {\n    props.getSinglePost({\n      postId: props.match?.params?.id,\n    });\n  }, []);\n  const { post } = props;\n  return (\n    <Fragment>\n      {post.loading ? (\n        <Spinner></Spinner>\n      ) : post.post !== null ? (\n        <Fragment>\n          <Link to=\"/Posts\" class=\"btn\">\n            Back To Posts\n          </Link>\n          <div class=\"post bg-white p-1 my-1\">\n            <div>\n              <Link to={`profile/${post?.post?.user}`}>\n                <img class=\"round-img\" src={post?.post?.avatar} alt=\"\" />\n                <h4>{post?.post?.name}</h4>\n              </Link>\n            </div>\n            <div>\n              <p class=\"my-1\">{post?.post?.text}</p>\n            </div>\n          </div>\n\n          <div class=\"post-form\">\n            <div class=\"bg-primary p\">\n              <h3>Leave A Comment</h3>\n            </div>\n            <form class=\"form my-1\" onSubmit={(e) => submitForm(e)}>\n              <textarea\n                name=\"text\"\n                cols=\"30\"\n                rows=\"5\"\n                placeholder=\"Comment on this post\"\n                required\n                value={formData.text}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              ></textarea>\n              <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n            </form>\n          </div>\n\n          <div class=\"comments\">\n            {post?.post?.comments?.length > 0 && (\n              <Fragment>\n                {post?.post?.comments.map((item) => {\n                  return (\n                    <div class=\"post bg-white p-1 my-1\">\n                      <div>\n                        <a href=\"profile.html\">\n                          <img class=\"round-img\" src={item?.avatar} alt=\"\" />\n                          <h4>{item?.name}</h4>\n                        </a>\n                      </div>\n                      <div>\n                        <p class=\"my-1\">{item?.text}</p>\n                        <p class=\"post-date\">\n                          Posted on\n                          <Moment format={\"YYYY/MM/DD\"}>{item?.date}</Moment>\n                        </p>\n                        {item?.user === props?.auth?.user?._id && (\n                          <button\n                            type=\"button\"\n                            class=\"btn btn-danger\"\n                            onClick={() => {\n                              props.deleteComment({\n                                commentId: item?._id,\n                                postId: post?.post?._id,\n                              });\n                            }}\n                          >\n                            <i class=\"fas fa-times\"></i>\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      ) : (\n        <p>No Post Found</p>\n      )}\n    </Fragment>\n  );\n};\n\nPostDetails.propTypes = {};\n\nexport default globalConnect()(PostDetails);\n",{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":24,"column":17,"nodeType":"279","endLine":29,"endColumn":18},{"ruleId":"280","severity":1,"message":"281","line":118,"column":9,"nodeType":"282","messageId":"283","endLine":118,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":4,"column":1,"nodeType":"286","endLine":17,"endColumn":2},{"ruleId":"284","severity":1,"message":"285","line":23,"column":1,"nodeType":"286","endLine":75,"endColumn":2},{"ruleId":"280","severity":1,"message":"287","line":6,"column":10,"nodeType":"282","messageId":"283","endLine":6,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":34,"column":29,"nodeType":"290","messageId":"291","endLine":34,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":54,"column":29,"nodeType":"290","messageId":"291","endLine":54,"endColumn":31},{"ruleId":"280","severity":1,"message":"292","line":66,"column":11,"nodeType":"282","messageId":"283","endLine":66,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":11,"column":6,"nodeType":"295","endLine":11,"endColumn":8,"suggestions":"296"},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"298","line":23,"column":3,"nodeType":"282","messageId":"283","endLine":23,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":38,"column":1,"nodeType":"286","endLine":117,"endColumn":2},{"ruleId":"299","severity":1,"message":"300","line":48,"column":5,"nodeType":"301","messageId":"302","endLine":48,"endColumn":33},{"ruleId":"303","severity":1,"message":"304","line":85,"column":5,"nodeType":"301","messageId":"305","endLine":85,"endColumn":31},{"ruleId":"280","severity":1,"message":"306","line":1,"column":8,"nodeType":"282","messageId":"283","endLine":1,"endColumn":13},{"ruleId":"288","severity":1,"message":"289","line":21,"column":29,"nodeType":"290","messageId":"291","endLine":21,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":47,"column":29,"nodeType":"290","messageId":"291","endLine":47,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":69,"column":29,"nodeType":"290","messageId":"291","endLine":69,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":91,"column":29,"nodeType":"290","messageId":"291","endLine":91,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":111,"column":29,"nodeType":"290","messageId":"291","endLine":111,"endColumn":31},{"ruleId":"280","severity":1,"message":"297","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":17},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"307","line":44,"column":5,"nodeType":"282","messageId":"283","endLine":44,"endColumn":15},{"ruleId":"280","severity":1,"message":"308","line":45,"column":5,"nodeType":"282","messageId":"283","endLine":45,"endColumn":14},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"306","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":13},{"ruleId":"280","severity":1,"message":"309","line":7,"column":10,"nodeType":"282","messageId":"283","endLine":7,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":37,"column":6,"nodeType":"295","endLine":37,"endColumn":8,"suggestions":"310"},{"ruleId":"293","severity":1,"message":"311","line":55,"column":6,"nodeType":"295","endLine":55,"endColumn":15,"suggestions":"312"},{"ruleId":"280","severity":1,"message":"307","line":75,"column":5,"nodeType":"282","messageId":"283","endLine":75,"endColumn":15},{"ruleId":"280","severity":1,"message":"308","line":76,"column":5,"nodeType":"282","messageId":"283","endLine":76,"endColumn":14},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"313","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":35},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":9,"column":6,"nodeType":"295","endLine":9,"endColumn":8,"suggestions":"314"},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":14,"column":6,"nodeType":"295","endLine":14,"endColumn":8,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":25,"column":35,"nodeType":"318","messageId":"305","endLine":25,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":15,"column":83,"nodeType":"318","messageId":"305","endLine":15,"endColumn":85},{"ruleId":"316","severity":1,"message":"317","line":16,"column":31,"nodeType":"318","messageId":"305","endLine":16,"endColumn":33},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":9,"column":6,"nodeType":"295","endLine":9,"endColumn":8,"suggestions":"319"},{"ruleId":"277","severity":1,"message":"320","line":24,"column":19,"nodeType":"279","endLine":24,"endColumn":73},{"ruleId":"280","severity":1,"message":"321","line":13,"column":3,"nodeType":"282","messageId":"283","endLine":13,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":23,"column":1,"nodeType":"286","endLine":105,"endColumn":2},{"ruleId":"280","severity":1,"message":"306","line":1,"column":8,"nodeType":"282","messageId":"283","endLine":1,"endColumn":13},{"ruleId":"280","severity":1,"message":"322","line":4,"column":27,"nodeType":"282","messageId":"283","endLine":4,"endColumn":33},{"ruleId":"280","severity":1,"message":"323","line":6,"column":10,"nodeType":"282","messageId":"283","endLine":6,"endColumn":30},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":29,"column":6,"nodeType":"295","endLine":29,"endColumn":8,"suggestions":"324"},{"ruleId":"280","severity":1,"message":"297","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":32,"column":6,"nodeType":"295","endLine":32,"endColumn":8,"suggestions":"325"},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setAlert' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["328"],"'PropTypes' is defined but never used.","'GET_GITHUB_REPO' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-duplicate-case","Duplicate case label.","unexpected","'axios' is defined but never used.","'experience' is assigned a value but never used.","'education' is assigned a value but never used.","'ENDPOINTS' is defined but never used.",["329"],"React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["330"],"'useState' is defined but never used.",["331"],["332"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["333"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'UNLIKE_POST' is defined but never used.","'ApiPut' is defined but never used.","'profileActionCreator' is defined but never used.",["334"],["335"],"no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"336","fix":"338"},{"desc":"339","fix":"340"},{"desc":"336","fix":"341"},{"desc":"336","fix":"342"},{"desc":"336","fix":"343"},{"desc":"336","fix":"344"},{"desc":"336","fix":"345"},"Update the dependencies array to be: [props]",{"range":"346","text":"347"},{"range":"348","text":"347"},"Update the dependencies array to be: [loading, profile]",{"range":"349","text":"350"},{"range":"351","text":"347"},{"range":"352","text":"347"},{"range":"353","text":"347"},{"range":"354","text":"347"},{"range":"355","text":"347"},[374,376],"[props]",[1006,1008],[1964,1973],"[loading, profile]",[336,338],[616,618],[235,237],[696,698],[804,806]]