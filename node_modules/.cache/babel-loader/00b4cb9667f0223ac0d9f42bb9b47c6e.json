{"ast":null,"code":"import { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiPost } from \"../../helpers/apiHelper\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\nexport const registerAPI = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n\n    if (!res.errors) {\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n    } else {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/authAPi.js"],"names":["ENDPOINTS","AlertHelper","ApiPost","setAlert","authActionCreator","store","registerAPI","params","res","register","body","errors","dispatch","registerUserSuccess","data","map","item","msg","alertType","console","log","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAC3C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,OAAO,CAACF,SAAS,CAACS,QAAX,EAAqBF,MAAM,CAACG,IAA5B,CAAzB;;AACA,QAAI,CAACF,GAAG,CAACG,MAAT,EAAiB;AACfN,MAAAA,KAAK,CAACO,QAAN,CAAeR,iBAAiB,CAACS,mBAAlB,CAAsCL,GAAG,CAACM,IAA1C,CAAf;AACD,KAFD,MAEO;AACLN,MAAAA,GAAG,CAACG,MAAJ,CAAWI,GAAX,CAAgBC,IAAD,IAAU;AACvBf,QAAAA,WAAW,CAAC;AAAEgB,UAAAA,GAAG,EAAED,IAAI,CAACC,GAAZ;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAD,CAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBZ,GAAnB;AACD,OAHD;AAID;AACF,GAVD,CAUE,OAAOa,KAAP,EAAc,CAAE;AACnB,CAZM","sourcesContent":["import { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiPost } from \"../../helpers/apiHelper\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\n\nexport const registerAPI = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n    if (!res.errors) {\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n    } else {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}