{"ast":null,"code":"import { REMOVE_ALERT, SET_ALERT } from \"./types\"; // import { createAction } from \"redux-actions\";\n// const alertActionCreator = {\n//   setAlert: createAction(SET_ALERT),\n//   removeAlert: createAction(REMOVE_ALERT),\n// };\n// export default alertActionCreator;\n\nexport const set_alert = params => dispatch => {\n  const id = Math.floor(Math.random() * 100000); /// before return we have set a timeout to clear alerts\n\n  setTimeout(() => {\n    dispatch(remove_alert(id));\n  }, 5000);\n  return {\n    type: SET_ALERT,\n    payload: {\n      id,\n      msg: params.msg,\n      alertType: params.alertType\n    }\n  };\n};\nexport const remove_alert = id => {\n  return {\n    type: REMOVE_ALERT,\n    payload: id\n  };\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/action/alert.js"],"names":["REMOVE_ALERT","SET_ALERT","set_alert","params","dispatch","id","Math","floor","random","setTimeout","remove_alert","type","payload","msg","alertType"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,SAAxC,C,CACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACjD,QAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAX,CADiD,CAEjD;;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfL,IAAAA,QAAQ,CAACM,YAAY,CAACL,EAAD,CAAb,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGA,SAAO;AACLM,IAAAA,IAAI,EAAEV,SADD;AAELW,IAAAA,OAAO,EAAE;AACPP,MAAAA,EADO;AAEPQ,MAAAA,GAAG,EAAEV,MAAM,CAACU,GAFL;AAGPC,MAAAA,SAAS,EAAEX,MAAM,CAACW;AAHX;AAFJ,GAAP;AAQD,CAdM;AAgBP,OAAO,MAAMJ,YAAY,GAAIL,EAAD,IAAQ;AAClC,SAAO;AACLM,IAAAA,IAAI,EAAEX,YADD;AAELY,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { REMOVE_ALERT, SET_ALERT } from \"./types\";\n// import { createAction } from \"redux-actions\";\n\n// const alertActionCreator = {\n//   setAlert: createAction(SET_ALERT),\n//   removeAlert: createAction(REMOVE_ALERT),\n// };\n// export default alertActionCreator;\n\nexport const set_alert = (params) => (dispatch) => {\n  const id = Math.floor(Math.random() * 100000);\n  /// before return we have set a timeout to clear alerts\n  setTimeout(() => {\n    dispatch(remove_alert(id));\n  }, 5000);\n  return {\n    type: SET_ALERT,\n    payload: {\n      id,\n      msg: params.msg,\n      alertType: params.alertType,\n    },\n  };\n};\n\nexport const remove_alert = (id) => {\n  return {\n    type: REMOVE_ALERT,\n    payload: id,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}