{"ast":null,"code":"import { createAction } from \"redux-actions\";\nimport { createOrUpdateApi, getUserProfileApi, addExperienceApi, addEducationApi, deleteEducationAPi, deleteExperienceApi } from \"../ApiCalls/profileApi\";\nimport { ADD_EDUCATION, ADD_EDUCATION_ERROR, ADD_EDUCATION_SUCCESS, ADD_EXPERIENCE, ADD_EXPERIENCE_ERROR, ADD_EXPERIENCE_SUCCESS, CLEAR_PROFILE, CREATE_OR_UPDATE_USER_PROFILE, CREATE_OR_UPDATE_USER_PROFILE_ERROR, CREATE_OR_UPDATE_USER_PROFILE_SUCCESS, DELETE_EDUCATION, DELETE_EDUCATION_ERROR, DELETE_EDUCATION_SUCCESS, DELETE_EXPERIENCE, DELETE_EXPERIENCE_ERROR, DELETE_EXPERIENCE_SUCCESS, GET_USER_PROFILE, GET_USER_PROFILE_ERROR, GET_USER_PROFILE_SUCCESS } from \"./types\";\nexport const profileActionCreator = {\n  getUserProfile: createAction(GET_USER_PROFILE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await getUserProfileApi(payload);\n  }),\n  getUserProfileSuccess: createAction(GET_USER_PROFILE_SUCCESS),\n  getUserProfileFailed: createAction(GET_USER_PROFILE_ERROR),\n  clearProfile: createAction(CLEAR_PROFILE),\n  createOrUpdateProfile: createAction(CREATE_OR_UPDATE_USER_PROFILE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await createOrUpdateApi(payload);\n  }),\n  createOrUpdateProfileSuccess: createAction(CREATE_OR_UPDATE_USER_PROFILE_SUCCESS),\n  createOrUpdateProfileError: createAction(CREATE_OR_UPDATE_USER_PROFILE_ERROR),\n  addExperience: createAction(ADD_EXPERIENCE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addExperienceSuccess: createAction(ADD_EXPERIENCE_SUCCESS),\n  addExperienceProfileError: createAction(ADD_EXPERIENCE_ERROR),\n  addEducation: createAction(ADD_EDUCATION, async payload => {\n    // this callback will be called when action is dis-patched.\n    await addEducationApi(payload);\n  }),\n  addEducationSuccess: createAction(ADD_EDUCATION_SUCCESS),\n  addEducationError: createAction(ADD_EDUCATION_ERROR),\n  deleteEducation: createAction(DELETE_EDUCATION, async payload => {\n    await deleteEducationAPi(payload);\n  }),\n  deleteEducationSuccess: createAction(DELETE_EDUCATION_SUCCESS),\n  deleteEducationError: createAction(DELETE_EDUCATION_ERROR),\n  deleteExperience: createAction(DELETE_EXPERIENCE, async payload => {\n    await deleteExperienceApi(payload);\n  }),\n  deleteExperienceSuccess: createAction(DELETE_EXPERIENCE_SUCCESS),\n  deleteExperienceError: createAction(DELETE_EXPERIENCE_ERROR)\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/profile.js"],"names":["createAction","createOrUpdateApi","getUserProfileApi","addExperienceApi","addEducationApi","deleteEducationAPi","deleteExperienceApi","ADD_EDUCATION","ADD_EDUCATION_ERROR","ADD_EDUCATION_SUCCESS","ADD_EXPERIENCE","ADD_EXPERIENCE_ERROR","ADD_EXPERIENCE_SUCCESS","CLEAR_PROFILE","CREATE_OR_UPDATE_USER_PROFILE","CREATE_OR_UPDATE_USER_PROFILE_ERROR","CREATE_OR_UPDATE_USER_PROFILE_SUCCESS","DELETE_EDUCATION","DELETE_EDUCATION_ERROR","DELETE_EDUCATION_SUCCESS","DELETE_EXPERIENCE","DELETE_EXPERIENCE_ERROR","DELETE_EXPERIENCE_SUCCESS","GET_USER_PROFILE","GET_USER_PROFILE_ERROR","GET_USER_PROFILE_SUCCESS","profileActionCreator","getUserProfile","payload","getUserProfileSuccess","getUserProfileFailed","clearProfile","createOrUpdateProfile","createOrUpdateProfileSuccess","createOrUpdateProfileError","addExperience","addExperienceSuccess","addExperienceProfileError","addEducation","addEducationSuccess","addEducationError","deleteEducation","deleteEducationSuccess","deleteEducationError","deleteExperience","deleteExperienceSuccess","deleteExperienceError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,kBALF,EAMEC,mBANF,QAOO,wBAPP;AAQA,SACEC,aADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,sBANF,EAOEC,aAPF,EAQEC,6BARF,EASEC,mCATF,EAUEC,qCAVF,EAWEC,gBAXF,EAYEC,sBAZF,EAaEC,wBAbF,EAcEC,iBAdF,EAeEC,uBAfF,EAgBEC,yBAhBF,EAiBEC,gBAjBF,EAkBEC,sBAlBF,EAmBEC,wBAnBF,QAoBO,SApBP;AAsBA,OAAO,MAAMC,oBAAoB,GAAG;AAClCC,EAAAA,cAAc,EAAE3B,YAAY,CAACuB,gBAAD,EAAmB,MAAOK,OAAP,IAAmB;AAChE;AACA,UAAM1B,iBAAiB,CAAC0B,OAAD,CAAvB;AACD,GAH2B,CADM;AAKlCC,EAAAA,qBAAqB,EAAE7B,YAAY,CAACyB,wBAAD,CALD;AAMlCK,EAAAA,oBAAoB,EAAE9B,YAAY,CAACwB,sBAAD,CANA;AAOlCO,EAAAA,YAAY,EAAE/B,YAAY,CAACa,aAAD,CAPQ;AASlCmB,EAAAA,qBAAqB,EAAEhC,YAAY,CACjCc,6BADiC,EAEjC,MAAOc,OAAP,IAAmB;AACjB;AACA,UAAM3B,iBAAiB,CAAC2B,OAAD,CAAvB;AACD,GALgC,CATD;AAgBlCK,EAAAA,4BAA4B,EAAEjC,YAAY,CACxCgB,qCADwC,CAhBR;AAmBlCkB,EAAAA,0BAA0B,EAAElC,YAAY,CAACe,mCAAD,CAnBN;AAqBlCoB,EAAAA,aAAa,EAAEnC,YAAY,CAACU,cAAD,EAAiB,MAAOkB,OAAP,IAAmB;AAC7D;AACA,UAAMzB,gBAAgB,CAACyB,OAAD,CAAtB;AACD,GAH0B,CArBO;AAyBlCQ,EAAAA,oBAAoB,EAAEpC,YAAY,CAACY,sBAAD,CAzBA;AA0BlCyB,EAAAA,yBAAyB,EAAErC,YAAY,CAACW,oBAAD,CA1BL;AA4BlC2B,EAAAA,YAAY,EAAEtC,YAAY,CAACO,aAAD,EAAgB,MAAOqB,OAAP,IAAmB;AAC3D;AACA,UAAMxB,eAAe,CAACwB,OAAD,CAArB;AACD,GAHyB,CA5BQ;AAgClCW,EAAAA,mBAAmB,EAAEvC,YAAY,CAACS,qBAAD,CAhCC;AAiClC+B,EAAAA,iBAAiB,EAAExC,YAAY,CAACQ,mBAAD,CAjCG;AAmClCiC,EAAAA,eAAe,EAAEzC,YAAY,CAACiB,gBAAD,EAAmB,MAAOW,OAAP,IAAmB;AACjE,UAAMvB,kBAAkB,CAACuB,OAAD,CAAxB;AACD,GAF4B,CAnCK;AAsClCc,EAAAA,sBAAsB,EAAE1C,YAAY,CAACmB,wBAAD,CAtCF;AAuClCwB,EAAAA,oBAAoB,EAAE3C,YAAY,CAACkB,sBAAD,CAvCA;AAyClC0B,EAAAA,gBAAgB,EAAE5C,YAAY,CAACoB,iBAAD,EAAoB,MAAOQ,OAAP,IAAmB;AACnE,UAAMtB,mBAAmB,CAACsB,OAAD,CAAzB;AACD,GAF6B,CAzCI;AA4ClCiB,EAAAA,uBAAuB,EAAE7C,YAAY,CAACsB,yBAAD,CA5CH;AA6ClCwB,EAAAA,qBAAqB,EAAE9C,YAAY,CAACqB,uBAAD;AA7CD,CAA7B","sourcesContent":["import { createAction } from \"redux-actions\";\nimport {\n  createOrUpdateApi,\n  getUserProfileApi,\n  addExperienceApi,\n  addEducationApi,\n  deleteEducationAPi,\n  deleteExperienceApi,\n} from \"../ApiCalls/profileApi\";\nimport {\n  ADD_EDUCATION,\n  ADD_EDUCATION_ERROR,\n  ADD_EDUCATION_SUCCESS,\n  ADD_EXPERIENCE,\n  ADD_EXPERIENCE_ERROR,\n  ADD_EXPERIENCE_SUCCESS,\n  CLEAR_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_ERROR,\n  CREATE_OR_UPDATE_USER_PROFILE_SUCCESS,\n  DELETE_EDUCATION,\n  DELETE_EDUCATION_ERROR,\n  DELETE_EDUCATION_SUCCESS,\n  DELETE_EXPERIENCE,\n  DELETE_EXPERIENCE_ERROR,\n  DELETE_EXPERIENCE_SUCCESS,\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_ERROR,\n  GET_USER_PROFILE_SUCCESS,\n} from \"./types\";\n\nexport const profileActionCreator = {\n  getUserProfile: createAction(GET_USER_PROFILE, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await getUserProfileApi(payload);\n  }),\n  getUserProfileSuccess: createAction(GET_USER_PROFILE_SUCCESS),\n  getUserProfileFailed: createAction(GET_USER_PROFILE_ERROR),\n  clearProfile: createAction(CLEAR_PROFILE),\n\n  createOrUpdateProfile: createAction(\n    CREATE_OR_UPDATE_USER_PROFILE,\n    async (payload) => {\n      // this callback will be called when action is dis-patched.\n      await createOrUpdateApi(payload);\n    }\n  ),\n  createOrUpdateProfileSuccess: createAction(\n    CREATE_OR_UPDATE_USER_PROFILE_SUCCESS\n  ),\n  createOrUpdateProfileError: createAction(CREATE_OR_UPDATE_USER_PROFILE_ERROR),\n\n  addExperience: createAction(ADD_EXPERIENCE, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addExperienceSuccess: createAction(ADD_EXPERIENCE_SUCCESS),\n  addExperienceProfileError: createAction(ADD_EXPERIENCE_ERROR),\n\n  addEducation: createAction(ADD_EDUCATION, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await addEducationApi(payload);\n  }),\n  addEducationSuccess: createAction(ADD_EDUCATION_SUCCESS),\n  addEducationError: createAction(ADD_EDUCATION_ERROR),\n\n  deleteEducation: createAction(DELETE_EDUCATION, async (payload) => {\n    await deleteEducationAPi(payload);\n  }),\n  deleteEducationSuccess: createAction(DELETE_EDUCATION_SUCCESS),\n  deleteEducationError: createAction(DELETE_EDUCATION_ERROR),\n\n  deleteExperience: createAction(DELETE_EXPERIENCE, async (payload) => {\n    await deleteExperienceApi(payload);\n  }),\n  deleteExperienceSuccess: createAction(DELETE_EXPERIENCE_SUCCESS),\n  deleteExperienceError: createAction(DELETE_EXPERIENCE_ERROR),\n\n  \n};\n"]},"metadata":{},"sourceType":"module"}