{"ast":null,"code":"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiGet, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { postActionCreator } from \"../action/post\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\nexport const getAllPostApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.getAllPost);\n    store.dispatch(postActionCreator.getAllPostSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.getAllPostError());\n  }\n};\nexport const likePostAPi = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.likePost, params);\n\n    if (res.msg) {\n      AlertHelper({\n        msg: res.msg,\n        alertType: \"danger\"\n      });\n      store.dispatch(postActionCreator.likePostError());\n    }\n\n    store.dispatch(postActionCreator.likePostSuccess({ ...res,\n      params\n    }));\n  } catch (error) {\n    store.dispatch(postActionCreator.likePostError());\n  }\n};\nexport const unlikePostApi = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.unlikePost, params);\n    store.dispatch(postActionCreator.unlikePostSuccess({ ...res.data,\n      params\n    }));\n  } catch (error) {\n    store.dispatch(postActionCreator.unlikePostError());\n  }\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/postApi.js"],"names":["axios","ENDPOINTS","AlertHelper","ApiGet","ApiPost","ApiPut","postActionCreator","profileActionCreator","store","getAllPostApi","res","getAllPost","dispatch","getAllPostSuccess","data","error","getAllPostError","likePostAPi","params","likePost","msg","alertType","likePostError","likePostSuccess","unlikePostApi","unlikePost","unlikePostSuccess","unlikePostError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,yBAAxC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,MAAM,CAACF,SAAS,CAACU,UAAX,CAAxB;AACAH,IAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACO,iBAAlB,CAAoCH,GAAG,CAACI,IAAxC,CAAf;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdP,IAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACU,eAAlB,EAAf;AACD;AACF,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAC3C,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMN,OAAO,CAACH,SAAS,CAACkB,QAAX,EAAqBD,MAArB,CAAzB;;AACA,QAAIR,GAAG,CAACU,GAAR,EAAa;AACXlB,MAAAA,WAAW,CAAC;AACVkB,QAAAA,GAAG,EAAEV,GAAG,CAACU,GADC;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAD,CAAX;AAIAb,MAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACgB,aAAlB,EAAf;AACD;;AACDd,IAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACiB,eAAlB,CAAkC,EAAE,GAAGb,GAAL;AAAUQ,MAAAA;AAAV,KAAlC,CAAf;AACD,GAVD,CAUE,OAAOH,KAAP,EAAc;AACdP,IAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACgB,aAAlB,EAAf;AACD;AACF,CAdM;AAgBP,OAAO,MAAME,aAAa,GAAG,MAAON,MAAP,IAAkB;AAC7C,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMN,OAAO,CAACH,SAAS,CAACwB,UAAX,EAAuBP,MAAvB,CAAzB;AACAV,IAAAA,KAAK,CAACI,QAAN,CACEN,iBAAiB,CAACoB,iBAAlB,CAAoC,EAAE,GAAGhB,GAAG,CAACI,IAAT;AAAeI,MAAAA;AAAf,KAApC,CADF;AAGD,GALD,CAKE,OAAOH,KAAP,EAAc;AACdP,IAAAA,KAAK,CAACI,QAAN,CAAeN,iBAAiB,CAACqB,eAAlB,EAAf;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiGet, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { postActionCreator } from \"../action/post\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\n\nexport const getAllPostApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.getAllPost);\n    store.dispatch(postActionCreator.getAllPostSuccess(res.data));\n  } catch (error) {\n    store.dispatch(postActionCreator.getAllPostError());\n  }\n};\n\nexport const likePostAPi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.likePost, params);\n    if (res.msg) {\n      AlertHelper({\n        msg: res.msg,\n        alertType: \"danger\",\n      });\n      store.dispatch(postActionCreator.likePostError());\n    }\n    store.dispatch(postActionCreator.likePostSuccess({ ...res, params }));\n  } catch (error) {\n    store.dispatch(postActionCreator.likePostError());\n  }\n};\n\nexport const unlikePostApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.unlikePost, params);\n    store.dispatch(\n      postActionCreator.unlikePostSuccess({ ...res.data, params })\n    );\n  } catch (error) {\n    store.dispatch(postActionCreator.unlikePostError());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}