{"ast":null,"code":"import axios from \"axios\";\nexport const ApiPost = async (url, body) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(url, JSON.stringify(body), config);\n\n    if (res.errors) {\n      console.log(\"errors123\");\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n};\n_c = ApiPost;\nexport const ApiGet = async url => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return await axios.get(url, config);\n};\n_c2 = ApiGet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApiPost\");\n$RefreshReg$(_c2, \"ApiGet\");","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/helpers/apiHelper.js"],"names":["axios","ApiPost","url","body","config","headers","res","post","JSON","stringify","errors","console","log","error","ApiGet","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC1C,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWL,GAAX,EAAgBM,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAhB,EAAsCC,MAAtC,CAAlB;;AACA,QAAIE,GAAG,CAACI,MAAR,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GAVD,CAUE,OAAOC,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD;AACF,CAdM;KAAMZ,O;AAgBb,OAAO,MAAMa,MAAM,GAAG,MAAOZ,GAAP,IAAe;AACnC,QAAME,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,SAAO,MAAML,KAAK,CAACe,GAAN,CAAUb,GAAV,EAAeE,MAAf,CAAb;AACD,CAPM;MAAMU,M","sourcesContent":["import axios from \"axios\";\n\nexport const ApiPost = async (url, body) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await axios.post(url, JSON.stringify(body), config);\n    if (res.errors) {\n      console.log(\"errors123\");\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n};\n\nexport const ApiGet = async (url) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return await axios.get(url, config);\n};\n"]},"metadata":{},"sourceType":"module"}