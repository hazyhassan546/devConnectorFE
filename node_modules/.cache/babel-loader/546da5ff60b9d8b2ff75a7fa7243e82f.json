{"ast":null,"code":"import { createAction } from \"redux-actions\";\nimport { createOrUpdateApi, getUserProfileApi, addExperienceApi } from \"../ApiCalls/profileApi\";\nimport { ADD_EDUCATION, ADD_EDUCATION_ERROR, ADD_EDUCATION_SUCCESS, ADD_EXPERIENCE, ADD_EXPERIENCE_ERROR, ADD_EXPERIENCE_SUCCESS, CLEAR_PROFILE, CREATE_OR_UPDATE_USER_PROFILE, CREATE_OR_UPDATE_USER_PROFILE_ERROR, CREATE_OR_UPDATE_USER_PROFILE_SUCCESS, GET_USER_PROFILE, GET_USER_PROFILE_ERROR, GET_USER_PROFILE_SUCCESS } from \"./types\";\nexport const profileActionCreator = {\n  getUserProfile: createAction(GET_USER_PROFILE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await getUserProfileApi(payload);\n  }),\n  getUserProfileSuccess: createAction(GET_USER_PROFILE_SUCCESS),\n  getUserProfileFailed: createAction(GET_USER_PROFILE_ERROR),\n  clearProfile: createAction(CLEAR_PROFILE),\n  createOrUpdateProfile: createAction(CREATE_OR_UPDATE_USER_PROFILE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await createOrUpdateApi(payload);\n  }),\n  createOrUpdateProfileSuccess: createAction(CREATE_OR_UPDATE_USER_PROFILE_SUCCESS),\n  createOrUpdateProfileError: createAction(CREATE_OR_UPDATE_USER_PROFILE_ERROR),\n  addExperience: createAction(ADD_EXPERIENCE, async payload => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addExperienceSuccess: createAction(ADD_EXPERIENCE_SUCCESS),\n  addExperienceProfileError: createAction(ADD_EXPERIENCE_ERROR),\n  addEducation: createAction(ADD_EDUCATION, async payload => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addEducationSuccess: createAction(ADD_EDUCATION_SUCCESS),\n  addEducationError: createAction(ADD_EDUCATION_ERROR)\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/action/profile.js"],"names":["createAction","createOrUpdateApi","getUserProfileApi","addExperienceApi","ADD_EDUCATION","ADD_EDUCATION_ERROR","ADD_EDUCATION_SUCCESS","ADD_EXPERIENCE","ADD_EXPERIENCE_ERROR","ADD_EXPERIENCE_SUCCESS","CLEAR_PROFILE","CREATE_OR_UPDATE_USER_PROFILE","CREATE_OR_UPDATE_USER_PROFILE_ERROR","CREATE_OR_UPDATE_USER_PROFILE_SUCCESS","GET_USER_PROFILE","GET_USER_PROFILE_ERROR","GET_USER_PROFILE_SUCCESS","profileActionCreator","getUserProfile","payload","getUserProfileSuccess","getUserProfileFailed","clearProfile","createOrUpdateProfile","createOrUpdateProfileSuccess","createOrUpdateProfileError","addExperience","addExperienceSuccess","addExperienceProfileError","addEducation","addEducationSuccess","addEducationError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,wBAJP;AAKA,SACEC,aADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,sBANF,EAOEC,aAPF,EAQEC,6BARF,EASEC,mCATF,EAUEC,qCAVF,EAWEC,gBAXF,EAYEC,sBAZF,EAaEC,wBAbF,QAcO,SAdP;AAgBA,OAAO,MAAMC,oBAAoB,GAAG;AAClCC,EAAAA,cAAc,EAAElB,YAAY,CAACc,gBAAD,EAAmB,MAAOK,OAAP,IAAmB;AAChE;AACA,UAAMjB,iBAAiB,CAACiB,OAAD,CAAvB;AACD,GAH2B,CADM;AAKlCC,EAAAA,qBAAqB,EAAEpB,YAAY,CAACgB,wBAAD,CALD;AAMlCK,EAAAA,oBAAoB,EAAErB,YAAY,CAACe,sBAAD,CANA;AAOlCO,EAAAA,YAAY,EAAEtB,YAAY,CAACU,aAAD,CAPQ;AASlCa,EAAAA,qBAAqB,EAAEvB,YAAY,CACjCW,6BADiC,EAEjC,MAAOQ,OAAP,IAAmB;AACjB;AACA,UAAMlB,iBAAiB,CAACkB,OAAD,CAAvB;AACD,GALgC,CATD;AAgBlCK,EAAAA,4BAA4B,EAAExB,YAAY,CACxCa,qCADwC,CAhBR;AAmBlCY,EAAAA,0BAA0B,EAAEzB,YAAY,CAACY,mCAAD,CAnBN;AAqBlCc,EAAAA,aAAa,EAAE1B,YAAY,CAACO,cAAD,EAAiB,MAAOY,OAAP,IAAmB;AAC7D;AACA,UAAMhB,gBAAgB,CAACgB,OAAD,CAAtB;AACD,GAH0B,CArBO;AAyBlCQ,EAAAA,oBAAoB,EAAE3B,YAAY,CAACS,sBAAD,CAzBA;AA0BlCmB,EAAAA,yBAAyB,EAAE5B,YAAY,CAACQ,oBAAD,CA1BL;AA4BlCqB,EAAAA,YAAY,EAAE7B,YAAY,CAACI,aAAD,EAAgB,MAAOe,OAAP,IAAmB;AAC3D;AACA,UAAMhB,gBAAgB,CAACgB,OAAD,CAAtB;AACD,GAHyB,CA5BQ;AAgClCW,EAAAA,mBAAmB,EAAE9B,YAAY,CAACM,qBAAD,CAhCC;AAiClCyB,EAAAA,iBAAiB,EAAE/B,YAAY,CAACK,mBAAD;AAjCG,CAA7B","sourcesContent":["import { createAction } from \"redux-actions\";\nimport {\n  createOrUpdateApi,\n  getUserProfileApi,\n  addExperienceApi,\n} from \"../ApiCalls/profileApi\";\nimport {\n  ADD_EDUCATION,\n  ADD_EDUCATION_ERROR,\n  ADD_EDUCATION_SUCCESS,\n  ADD_EXPERIENCE,\n  ADD_EXPERIENCE_ERROR,\n  ADD_EXPERIENCE_SUCCESS,\n  CLEAR_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_ERROR,\n  CREATE_OR_UPDATE_USER_PROFILE_SUCCESS,\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_ERROR,\n  GET_USER_PROFILE_SUCCESS,\n} from \"./types\";\n\nexport const profileActionCreator = {\n  getUserProfile: createAction(GET_USER_PROFILE, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await getUserProfileApi(payload);\n  }),\n  getUserProfileSuccess: createAction(GET_USER_PROFILE_SUCCESS),\n  getUserProfileFailed: createAction(GET_USER_PROFILE_ERROR),\n  clearProfile: createAction(CLEAR_PROFILE),\n\n  createOrUpdateProfile: createAction(\n    CREATE_OR_UPDATE_USER_PROFILE,\n    async (payload) => {\n      // this callback will be called when action is dis-patched.\n      await createOrUpdateApi(payload);\n    }\n  ),\n  createOrUpdateProfileSuccess: createAction(\n    CREATE_OR_UPDATE_USER_PROFILE_SUCCESS\n  ),\n  createOrUpdateProfileError: createAction(CREATE_OR_UPDATE_USER_PROFILE_ERROR),\n\n  addExperience: createAction(ADD_EXPERIENCE, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addExperienceSuccess: createAction(ADD_EXPERIENCE_SUCCESS),\n  addExperienceProfileError: createAction(ADD_EXPERIENCE_ERROR),\n\n  addEducation: createAction(ADD_EDUCATION, async (payload) => {\n    // this callback will be called when action is dis-patched.\n    await addExperienceApi(payload);\n  }),\n  addEducationSuccess: createAction(ADD_EDUCATION_SUCCESS),\n  addEducationError: createAction(ADD_EDUCATION_ERROR),\n};\n"]},"metadata":{},"sourceType":"module"}