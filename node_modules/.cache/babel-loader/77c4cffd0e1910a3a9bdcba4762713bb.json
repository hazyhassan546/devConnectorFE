{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from\"react\";import{globalConnect}from\"../../redux/connect/globalConnect\";import Moment from\"react-moment\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AllPostsScreen=function AllPostsScreen(props){var _useState=useState({text:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _onChange=function onChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var submitForm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(formData.text!==\"\"){props.createPost(formData);setFormData({text:\"\"});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function submitForm(_x){return _ref.apply(this,arguments);};}();useEffect(function(){props.getAllPosts();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{class:\"large text-primary\",children:\"Posts\"}),/*#__PURE__*/_jsxs(\"p\",{class:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-user\"}),\" Welcome to the community!\"]}),/*#__PURE__*/_jsxs(\"div\",{class:\"post-form\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"bg-primary p\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Say Something...\"})}),/*#__PURE__*/_jsxs(\"form\",{class:\"form my-1\",onSubmit:function onSubmit(e){return submitForm(e);},children:[/*#__PURE__*/_jsx(\"textarea\",{name:\"text\",cols:\"30\",onChange:function onChange(e){return _onChange(e);},rows:\"5\",value:formData.text,placeholder:\"Create a post\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",class:\"btn btn-dark my-1\",value:\"Submit\"})]})]}),props.post.posts.length>0?props.post.posts.map(function(item){var _item$comments,_item$comments2;return/*#__PURE__*/_jsxs(\"div\",{class:\"post bg-white p-1 my-1\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"a\",{href:\"profile.html\",children:[/*#__PURE__*/_jsx(\"img\",{class:\"round-img\",src:item.avatar,alt:\"\"}),/*#__PURE__*/_jsx(\"h4\",{children:item===null||item===void 0?void 0:item.name})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{class:\"my-1\",children:item.text}),/*#__PURE__*/_jsxs(\"p\",{class:\"post-date\",children:[\"Posted on \",/*#__PURE__*/_jsx(Moment,{format:\"YYYY/MM/DD\",children:item===null||item===void 0?void 0:item.date})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",class:\"btn btn-light\",onClick:function onClick(){props.likePost({postId:item._id});},children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-thumbs-up\"}),/*#__PURE__*/_jsx(\"span\",{children:item.likes.length})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-light\",onClick:function onClick(){props.unlikePost({postId:item._id});},children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-thumbs-down\"})}),/*#__PURE__*/_jsxs(Link,{to:\"postDetail/\".concat(item._id),class:\"btn btn-primary\",children:[\"Discussion\",(item===null||item===void 0?void 0:(_item$comments=item.comments)===null||_item$comments===void 0?void 0:_item$comments.length)>0&&/*#__PURE__*/_jsx(\"span\",{class:\"comment-count\",children:item===null||item===void 0?void 0:(_item$comments2=item.comments)===null||_item$comments2===void 0?void 0:_item$comments2.length})]}),(item===null||item===void 0?void 0:item.user)===props.auth.user._id&&props.post.loading===false&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-danger\",onClick:function onClick(){props.deletePost({postId:item._id});},children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-times\"})})]})]});}):/*#__PURE__*/_jsx(\"p\",{children:\"No Post found\"})]});};export default globalConnect()(AllPostsScreen);","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/allPosts.js"],"names":["React","Fragment","useEffect","useState","globalConnect","Moment","Link","AllPostsScreen","props","text","formData","setFormData","onChange","e","target","name","value","submitForm","preventDefault","createPost","getAllPosts","post","posts","length","map","item","avatar","date","likePost","postId","_id","likes","unlikePost","comments","user","auth","loading","deletePost"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst AllPostsScreen = (props) => {\n  const [formData, setFormData] = useState({\n    text: \"\",\n  });\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (formData.text !== \"\") {\n      props.createPost(formData);\n      setFormData({\n        text: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    props.getAllPosts();\n  }, []);\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Posts</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-user\"></i> Welcome to the community!\n      </p>\n      <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Say Something...</h3>\n        </div>\n        <form class=\"form my-1\" onSubmit={(e) => submitForm(e)}>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            onChange={(e) => onChange(e)}\n            rows=\"5\"\n            value={formData.text}\n            placeholder=\"Create a post\"\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n      {props.post.posts.length > 0 ? (\n        props.post.posts.map((item) => {\n          return (\n            <div class=\"post bg-white p-1 my-1\">\n              <div>\n                <a href=\"profile.html\">\n                  <img class=\"round-img\" src={item.avatar} alt=\"\" />\n                  <h4>{item?.name}</h4>\n                </a>\n              </div>\n              <div>\n                <p class=\"my-1\">{item.text}</p>\n                <p class=\"post-date\">\n                  Posted on <Moment format={\"YYYY/MM/DD\"}>{item?.date}</Moment>\n                </p>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.likePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-up\"></i>\n                  <span>{item.likes.length}</span>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.unlikePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-down\"></i>\n                </button>\n                <Link to={`postDetail/${item._id}`} class=\"btn btn-primary\">\n                  Discussion\n                  {item?.comments?.length > 0 && (\n                    <span class=\"comment-count\">{item?.comments?.length}</span>\n                  )}\n                </Link>\n\n                {item?.user === props.auth.user._id &&\n                  props.post.loading === false && (\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-danger\"\n                      onClick={() => {\n                        props.deletePost({\n                          postId: item._id,\n                        });\n                      }}\n                    >\n                      <i class=\"fas fa-times\"></i>\n                    </button>\n                  )}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <p>No Post found</p>\n      )}\n    </Fragment>\n  );\n};\n\nAllPostsScreen.propTypes = {};\n\nexport default globalConnect()(AllPostsScreen);\n"]},"metadata":{},"sourceType":"module"}