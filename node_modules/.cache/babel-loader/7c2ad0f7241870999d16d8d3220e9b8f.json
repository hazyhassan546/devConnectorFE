{"ast":null,"code":"import axios from \"axios\";\nimport { ApiPost } from \"../helpers/apiHelper\";\nimport { set_alert } from \"./alert\";\nimport { REGISTER_USER, REGISTER_USER_SUCCESS, REGISTER_USER_FAILED } from \"./types\";\nexport const registerUser = params => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER\n    });\n    const response = await ApiPost(\"/api/users\", params === null || params === void 0 ? void 0 : params.body);\n\n    if (!response.error) {\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: REGISTER_USER_FAILED\n      });\n      dispatch(set_alert(\"hello\", \"danger\"));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: REGISTER_USER_FAILED\n    });\n  }\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/action/auth.js"],"names":["axios","ApiPost","set_alert","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","registerUser","params","dispatch","type","response","body","error","payload","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SACEC,aADF,EAEEC,qBAFF,EAGEC,oBAHF,QAIO,SAJP;AAMA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGA,UAAMO,QAAQ,GAAG,MAAMT,OAAO,CAAC,YAAD,EAAeM,MAAf,aAAeA,MAAf,uBAAeA,MAAM,CAAEI,IAAvB,CAA9B;;AACA,QAAI,CAACD,QAAQ,CAACE,KAAd,EAAqB;AACnBJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,qBADC;AAEPS,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID,KALD,MAKO;AACLN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ;AADC,OAAD,CAAR;AAGAG,MAAAA,QAAQ,CAACN,SAAS,CAAC,OAAD,EAAU,QAAV,CAAV,CAAR;AACD;AACF,GAhBD,CAgBE,OAAOU,KAAP,EAAc;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGD;AACF,CAvBM","sourcesContent":["import axios from \"axios\";\nimport { ApiPost } from \"../helpers/apiHelper\";\nimport { set_alert } from \"./alert\";\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from \"./types\";\n\nexport const registerUser = (params) => async (dispatch) => {\n  try {\n    dispatch({\n      type: REGISTER_USER,\n    });\n    const response = await ApiPost(\"/api/users\", params?.body);\n    if (!response.error) {\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: response.data,\n      });\n    } else {\n      dispatch({\n        type: REGISTER_USER_FAILED,\n      });\n      dispatch(set_alert(\"hello\", \"danger\"));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: REGISTER_USER_FAILED,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}