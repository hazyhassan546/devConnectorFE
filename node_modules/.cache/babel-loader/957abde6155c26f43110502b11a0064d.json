{"ast":null,"code":"import { GET_USER_PROFILE, GET_USER_PROFILE_SUCCESS, GET_USER_PROFILE_ERROR, CLEAR_PROFILE, CREATE_OR_UPDATE_USER_PROFILE_SUCCESS, CREATE_OR_UPDATE_USER_PROFILE, CREATE_OR_UPDATE_USER_PROFILE_ERROR, ADD_EXPERIENCE, ADD_EXPERIENCE_ERROR, ADD_EXPERIENCE_SUCCESS } from \"../action/types\";\nconst initialState = {\n  profile: null,\n  profiles: null,\n  repos: [],\n  experience: [],\n  loading: false,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_OR_UPDATE_USER_PROFILE:\n    case ADD_EXPERIENCE:\n    case GET_USER_PROFILE:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case CREATE_OR_UPDATE_USER_PROFILE_SUCCESS:\n    case GET_USER_PROFILE_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          profile: payload\n        };\n      }\n\n    case CREATE_OR_UPDATE_USER_PROFILE_ERROR:\n    case ADD_EXPERIENCE_ERROR:\n    case ADD_EXPERIENCE_SUCCESS:\n    case GET_USER_PROFILE_ERROR:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    case CLEAR_PROFILE:\n      {\n        return { ...state,\n          profile: null,\n          profiles: null,\n          repos: [],\n          experience: [],\n          loading: false,\n          error: {}\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/reducers/profileReducers.js"],"names":["GET_USER_PROFILE","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_ERROR","CLEAR_PROFILE","CREATE_OR_UPDATE_USER_PROFILE_SUCCESS","CREATE_OR_UPDATE_USER_PROFILE","CREATE_OR_UPDATE_USER_PROFILE_ERROR","ADD_EXPERIENCE","ADD_EXPERIENCE_ERROR","ADD_EXPERIENCE_SUCCESS","initialState","profile","profiles","repos","experience","loading","error","state","action","type","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,sBAHF,EAIEC,aAJF,EAKEC,qCALF,EAMEC,6BANF,EAOEC,mCAPF,EAQEC,cARF,EASEC,oBATF,EAUEC,sBAVF,QAWO,iBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKd,6BAAL;AACA,SAAKE,cAAL;AACA,SAAKP,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGiB,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKX,qCAAL;AACA,SAAKH,wBAAL;AAA+B;AAC7B,eAAO,EACL,GAAGgB,KADE;AAELF,UAAAA,OAAO,EAAE,KAFJ;AAGLJ,UAAAA,OAAO,EAAES;AAHJ,SAAP;AAKD;;AACD,SAAKd,mCAAL;AACA,SAAKE,oBAAL;AACA,SAAKC,sBAAL;AACA,SAAKP,sBAAL;AAA6B;AAC3B,eAAO,EACL,GAAGe,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKZ,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGc,KADE;AAELN,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,QAAQ,EAAE,IAHL;AAILC,UAAAA,KAAK,EAAE,EAJF;AAKLC,UAAAA,UAAU,EAAE,EALP;AAMLC,UAAAA,OAAO,EAAE,KANJ;AAOLC,UAAAA,KAAK,EAAE;AAPF,SAAP;AASD;;AACD;AAAS;AACP,eAAOC,KAAP;AACD;AAvCH;AAyCD","sourcesContent":["import {\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_SUCCESS,\n  GET_USER_PROFILE_ERROR,\n  CLEAR_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_SUCCESS,\n  CREATE_OR_UPDATE_USER_PROFILE,\n  CREATE_OR_UPDATE_USER_PROFILE_ERROR,\n  ADD_EXPERIENCE,\n  ADD_EXPERIENCE_ERROR,\n  ADD_EXPERIENCE_SUCCESS,\n} from \"../action/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: null,\n  repos: [],\n  experience: [],\n  loading: false,\n  error: {},\n};\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CREATE_OR_UPDATE_USER_PROFILE:\n    case ADD_EXPERIENCE:\n    case GET_USER_PROFILE: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case CREATE_OR_UPDATE_USER_PROFILE_SUCCESS:\n    case GET_USER_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        profile: payload,\n      };\n    }\n    case CREATE_OR_UPDATE_USER_PROFILE_ERROR:\n    case ADD_EXPERIENCE_ERROR:\n    case ADD_EXPERIENCE_SUCCESS:\n    case GET_USER_PROFILE_ERROR: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case CLEAR_PROFILE: {\n      return {\n        ...state,\n        profile: null,\n        profiles: null,\n        repos: [],\n        experience: [],\n        loading: false,\n        error: {},\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}