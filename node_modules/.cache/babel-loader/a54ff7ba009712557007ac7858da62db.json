{"ast":null,"code":"var _jsxFileName = \"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/allPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllPostsScreen = props => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    text: \"\"\n  });\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n\n    if (formData.text !== \"\") {\n      props.createPost(formData);\n      setFormData({\n        text: \"\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    props.getAllPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"large text-primary\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \" Welcome to the community!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg-primary p\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Say Something...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form my-1\",\n        onSubmit: e => submitForm(e),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"text\",\n          cols: \"30\",\n          onChange: e => onChange(e),\n          rows: \"5\",\n          placeholder: \"Create a post\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          class: \"btn btn-dark my-1\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), props.post.posts.length > 0 ? props.post.posts.map(item => {\n      var _item$comments, _item$comments2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"post bg-white p-1 my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"profile.html\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"round-img\",\n              src: item.avatar,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item === null || item === void 0 ? void 0 : item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"my-1\",\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"post-date\",\n            children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY/MM/DD\",\n              children: item === null || item === void 0 ? void 0 : item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-light\",\n            onClick: () => {\n              props.likePost({\n                postId: item._id\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-thumbs-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-light\",\n            onClick: () => {\n              props.unlikePost({\n                postId: item._id\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-thumbs-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"postDetail\",\n            class: \"btn btn-primary\",\n            children: [\"Discussion\", (item === null || item === void 0 ? void 0 : (_item$comments = item.comments) === null || _item$comments === void 0 ? void 0 : _item$comments.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"comment-count\",\n              children: item === null || item === void 0 ? void 0 : (_item$comments2 = item.comments) === null || _item$comments2 === void 0 ? void 0 : _item$comments2.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), (item === null || item === void 0 ? void 0 : item.user) === props.auth.user._id && props.post.loading === false && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-danger\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Post found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllPostsScreen, \"uQHO8sMbDd8T/jIC+F0SDwWEykY=\");\n\n_c = AllPostsScreen;\nAllPostsScreen.propTypes = {};\nexport default globalConnect()(AllPostsScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPostsScreen\");","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/post/allPosts.js"],"names":["React","Fragment","useEffect","useState","PropTypes","globalConnect","Moment","Link","AllPostsScreen","props","formData","setFormData","text","onChange","e","target","name","value","submitForm","preventDefault","createPost","getAllPosts","post","posts","length","map","item","avatar","date","likePost","postId","_id","likes","unlikePost","comments","user","auth","loading","propTypes"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst AllPostsScreen = (props) => {\n  const [formData, setFormData] = useState({\n    text: \"\",\n  });\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (formData.text !== \"\") {\n      props.createPost(formData);\n      setFormData({\n        text: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    props.getAllPosts();\n  }, []);\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Posts</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-user\"></i> Welcome to the community!\n      </p>\n      <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Say Something...</h3>\n        </div>\n        <form class=\"form my-1\" onSubmit={(e) => submitForm(e)}>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            onChange={(e) => onChange(e)}\n            rows=\"5\"\n            placeholder=\"Create a post\"\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n      {props.post.posts.length > 0 ? (\n        props.post.posts.map((item) => {\n          return (\n            <div class=\"post bg-white p-1 my-1\">\n              <div>\n                <a href=\"profile.html\">\n                  <img class=\"round-img\" src={item.avatar} alt=\"\" />\n                  <h4>{item?.name}</h4>\n                </a>\n              </div>\n              <div>\n                <p class=\"my-1\">{item.text}</p>\n                <p class=\"post-date\">\n                  Posted on <Moment format={\"YYYY/MM/DD\"}>{item?.date}</Moment>\n                </p>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.likePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-up\"></i>\n                  <span>{item.likes.length}</span>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-light\"\n                  onClick={() => {\n                    props.unlikePost({\n                      postId: item._id,\n                    });\n                  }}\n                >\n                  <i class=\"fas fa-thumbs-down\"></i>\n                </button>\n                <Link to=\"postDetail\" class=\"btn btn-primary\">\n                  Discussion\n                  {item?.comments?.length > 0 && (\n                    <span class=\"comment-count\">{item?.comments?.length}</span>\n                  )}\n                </Link>\n\n                {item?.user === props.auth.user._id &&\n                  props.post.loading === false && (\n                    <button type=\"button\" class=\"btn btn-danger\">\n                      <i class=\"fas fa-times\"></i>\n                    </button>\n                  )}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <p>No Post found</p>\n      )}\n    </Fragment>\n  );\n};\n\nAllPostsScreen.propTypes = {};\n\nexport default globalConnect()(AllPostsScreen);\n"]},"metadata":{},"sourceType":"module"}