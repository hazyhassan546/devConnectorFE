{"ast":null,"code":"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiDelete, ApiGet, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\nexport const getUserProfileApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.profile);\n    store.dispatch(profileActionCreator.getUserProfileSuccess(res.data));\n  } catch (error) {\n    store.dispatch(profileActionCreator.getUserProfileFailed());\n  }\n};\nexport const createOrUpdateApi = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.createUpdateProfile, params === null || params === void 0 ? void 0 : params.formData);\n\n    if (res.errors) {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.createOrUpdateProfileError());\n    } else {\n      store.dispatch(profileActionCreator.createOrUpdateProfileSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: !(params === null || params === void 0 ? void 0 : params.edit) ? \"Profile created successfully\" : \"Profile updated successfully\",\n        alertType: \"success\"\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.createOrUpdateProfileError());\n  }\n};\nexport const addExperienceApi = async params => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addExperience, params === null || params === void 0 ? void 0 : params.formData);\n\n    if (res.errors) {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addExperienceProfileError());\n    } else {\n      store.dispatch(profileActionCreator.addExperienceSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Experience added successfully\",\n        alertType: \"success\"\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addExperienceProfileError());\n  }\n};\nexport const addEducationApi = async params => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addEducation, params === null || params === void 0 ? void 0 : params.formData);\n\n    if (res.errors) {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addEducationError());\n    } else {\n      store.dispatch(profileActionCreator.addEducationSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Education added successfully\",\n        alertType: \"success\"\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addEducationError());\n  }\n};\nexport const deleteEducationAPi = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deleteEducation, params);\n\n    if (res.errors) {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n      });\n      store.dispatch(profileActionCreator.deleteEducationError());\n    } else {\n      store.dispatch(profileActionCreator.deleteEducationSuccess(res.data));\n      AlertHelper({\n        msg: \"Education deleted successfully\",\n        alertType: \"success\"\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteEducationError());\n  }\n};\nexport const deleteExperienceApi = async params => {\n  try {\n    const res = await ApiDelete(ENDPOINTS.deleteExperience, params === null || params === void 0 ? void 0 : params.formData);\n\n    if (res.errors) {\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n      });\n      store.dispatch(profileActionCreator.deleteExperienceError());\n    } else {\n      store.dispatch(profileActionCreator.deleteExperienceSuccess(res.data));\n      AlertHelper({\n        msg: \"Experience deleted successfully\",\n        alertType: \"success\"\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteExperienceError());\n  }\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/profileApi.js"],"names":["axios","ENDPOINTS","AlertHelper","ApiDelete","ApiGet","ApiPost","ApiPut","profileActionCreator","store","getUserProfileApi","res","profile","dispatch","getUserProfileSuccess","data","error","getUserProfileFailed","createOrUpdateApi","params","createUpdateProfile","formData","errors","map","item","msg","alertType","console","log","createOrUpdateProfileError","createOrUpdateProfileSuccess","history","push","edit","addExperienceApi","addExperience","addExperienceProfileError","addExperienceSuccess","addEducationApi","addEducation","addEducationError","addEducationSuccess","deleteEducationAPi","deleteEducation","deleteEducationError","deleteEducationSuccess","deleteExperienceApi","deleteExperience","deleteExperienceError","deleteExperienceSuccess"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiDelete, ApiGet, ApiPost, ApiPut } from \"../../helpers/apiHelper\";\nimport { profileActionCreator } from \"../action/profile\";\nimport store from \"../store\";\n\nexport const getUserProfileApi = async () => {\n  try {\n    const res = await ApiGet(ENDPOINTS.profile);\n    store.dispatch(profileActionCreator.getUserProfileSuccess(res.data));\n  } catch (error) {\n    store.dispatch(profileActionCreator.getUserProfileFailed());\n  }\n};\n\nexport const createOrUpdateApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.createUpdateProfile, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.createOrUpdateProfileError());\n    } else {\n      store.dispatch(\n        profileActionCreator.createOrUpdateProfileSuccess(res.data)\n      );\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: !params?.edit\n          ? \"Profile created successfully\"\n          : \"Profile updated successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.createOrUpdateProfileError());\n  }\n};\n\nexport const addExperienceApi = async (params) => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addExperience, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addExperienceProfileError());\n    } else {\n      store.dispatch(profileActionCreator.addExperienceSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Experience added successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addExperienceProfileError());\n  }\n};\n\nexport const addEducationApi = async (params) => {\n  try {\n    const res = await ApiPut(ENDPOINTS.addEducation, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n      store.dispatch(profileActionCreator.addEducationError());\n    } else {\n      store.dispatch(profileActionCreator.addEducationSuccess(res.data));\n      params.history.push(\"/dashboard\");\n      AlertHelper({\n        msg: \"Education added successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.addEducationError());\n  }\n};\n\nexport const deleteEducationAPi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.deleteEducation, params);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n      });\n      store.dispatch(profileActionCreator.deleteEducationError());\n    } else {\n      store.dispatch(profileActionCreator.deleteEducationSuccess(res.data));\n      AlertHelper({\n        msg: \"Education deleted successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteEducationError());\n  }\n};\n\nexport const deleteExperienceApi = async (params) => {\n  try {\n    const res = await ApiDelete(ENDPOINTS.deleteExperience, params?.formData);\n    if (res.errors) {\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n      });\n      store.dispatch(profileActionCreator.deleteExperienceError());\n    } else {\n      store.dispatch(profileActionCreator.deleteExperienceSuccess(res.data));\n      AlertHelper({\n        msg: \"Experience deleted successfully\",\n        alertType: \"success\",\n      });\n    }\n  } catch (error) {\n    store.dispatch(profileActionCreator.deleteExperienceError());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}