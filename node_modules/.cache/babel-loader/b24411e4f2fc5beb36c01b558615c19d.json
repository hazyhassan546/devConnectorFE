{"ast":null,"code":"import _objectSpread from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useEffect}from\"react\";import{Link}from\"react-router-dom\";import Spinner from\"../../components/layouts/spinner\";import{globalConnect}from\"../../redux/connect/globalConnect\";import About from\"./profileComponents/about\";import Education from\"./profileComponents/education\";import Experience from\"./profileComponents/experience\";import GithubRepo from\"./profileComponents/githubRepos\";import ProfileTop from\"./profileComponents/profileTop\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfileScreen=function ProfileScreen(props){var _props$profile,_props$profile$profil;useEffect(function(){props.getUserProfileById({userId:props.match.params.id});},[]);return/*#__PURE__*/_jsx(Fragment,{children:props.profile.loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/profiles\",class:\"btn btn-light\",children:\"Go back to profiles\"}),props.auth.isAuthenticated&&props.profile.loading==false&&props.auth.user._id===props.match.params.id&&/*#__PURE__*/_jsxs(Link,{to:\"/edit-profile\",class:\"btn btn-light\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-user-circle text-primary\"}),\" Edit Profile\"]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,_objectSpread({},props)),/*#__PURE__*/_jsx(About,_objectSpread({},props))]}),/*#__PURE__*/_jsx(Experience,_objectSpread({},props)),/*#__PURE__*/_jsx(Education,_objectSpread({},props)),(props===null||props===void 0?void 0:(_props$profile=props.profile)===null||_props$profile===void 0?void 0:(_props$profile$profil=_props$profile.profile)===null||_props$profile$profil===void 0?void 0:_props$profile$profil.githubUserName)&&/*#__PURE__*/_jsx(GithubRepo,_objectSpread({},props))]})});};export default globalConnect()(ProfileScreen);","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/profileScreen.js"],"names":["React","Fragment","useEffect","Link","Spinner","globalConnect","About","Education","Experience","GithubRepo","ProfileTop","ProfileScreen","props","getUserProfileById","userId","match","params","id","profile","loading","auth","isAuthenticated","user","_id","githubUserName"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kCAApB,CACA,OAASC,aAAT,KAA8B,mCAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,0CAC/BV,SAAS,CAAC,UAAM,CACdU,KAAK,CAACC,kBAAN,CAAyB,CAAEC,MAAM,CAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAA7B,CAAzB,EACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,KAAC,QAAD,WACGL,KAAK,CAACM,OAAN,CAAcC,OAAd,cACC,KAAC,OAAD,IADD,cAGC,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,CAAqB,KAAK,CAAC,eAA3B,iCADF,CAIGP,KAAK,CAACQ,IAAN,CAAWC,eAAX,EACCT,KAAK,CAACM,OAAN,CAAcC,OAAd,EAAyB,KAD1B,EAECP,KAAK,CAACQ,IAAN,CAAWE,IAAX,CAAgBC,GAAhB,GAAwBX,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAF5C,eAGG,MAAC,IAAD,EAAM,EAAE,CAAC,eAAT,CAAyB,KAAK,CAAC,eAA/B,wBACE,UAAG,KAAK,CAAC,iCAAT,EADF,mBAPN,cAWE,aAAK,KAAK,CAAC,mBAAX,wBACE,KAAC,UAAD,kBAAgBL,KAAhB,EADF,cAEE,KAAC,KAAD,kBAAWA,KAAX,EAFF,GAXF,cAeE,KAAC,UAAD,kBAAgBA,KAAhB,EAfF,cAgBE,KAAC,SAAD,kBAAeA,KAAf,EAhBF,CAiBG,CAAAA,KAAK,OAAL,EAAAA,KAAK,SAAL,wBAAAA,KAAK,CAAEM,OAAP,+EAAgBA,OAAhB,sEAAyBM,cAAzB,gBAA2C,KAAC,UAAD,kBAAgBZ,KAAhB,EAjB9C,GAJJ,EADF,CA2BD,CA/BD,CAiCA,cAAeP,CAAAA,aAAa,GAAGM,aAAH,CAA5B","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/layouts/spinner\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport About from \"./profileComponents/about\";\nimport Education from \"./profileComponents/education\";\nimport Experience from \"./profileComponents/experience\";\nimport GithubRepo from \"./profileComponents/githubRepos\";\nimport ProfileTop from \"./profileComponents/profileTop\";\n\nconst ProfileScreen = (props) => {\n  useEffect(() => {\n    props.getUserProfileById({ userId: props.match.params.id });\n  }, []);\n  return (\n    <Fragment>\n      {props.profile.loading ? (\n        <Spinner></Spinner>\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" class=\"btn btn-light\">\n            Go back to profiles\n          </Link>\n          {props.auth.isAuthenticated &&\n            props.profile.loading == false &&\n            props.auth.user._id === props.match.params.id && (\n              <Link to=\"/edit-profile\" class=\"btn btn-light\">\n                <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile\n              </Link>\n            )}\n          <div class=\"profile-grid my-1\">\n            <ProfileTop {...props} />\n            <About {...props} />\n          </div>\n          <Experience {...props} />\n          <Education {...props} />\n          {props?.profile?.profile?.githubUserName && <GithubRepo {...props} />}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default globalConnect()(ProfileScreen);\n"]},"metadata":{},"sourceType":"module"}