{"ast":null,"code":"import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiDelete, ApiPost } from \"../../helpers/apiHelper\";\nimport setAuthToken from \"../../helpers/setAuthToken\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\nexport const loadUser = async () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/auth\");\n    store.dispatch(authActionCreator.userLoaded(res.data));\n  } catch (error) {\n    store.dispatch(authActionCreator.authError());\n  }\n};\nexport const registerAPI = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n\n    if (!res.errors) {\n      AlertHelper({\n        msg: \"User Registered Successfully\",\n        alertType: \"success\"\n      });\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.registerUserFailed());\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};\nexport const loginApi = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.login, params);\n\n    if (res.data) {\n      AlertHelper({\n        msg: \"User Login Successfully\",\n        alertType: \"success\"\n      });\n      store.dispatch(authActionCreator.loginSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.loginError());\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {\n    store.dispatch(authActionCreator.loginError());\n  }\n};\nexport const deleteAccountApi = async () => {\n  try {\n    const res = await ApiDelete(ENDPOINTS.deleteProfile);\n    store.dispatch(authActionCreator.deleteAccountSuccess());\n  } catch (error) {\n    store.dispatch(authActionCreator.deleteAccountError());\n  }\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/authAPi.js"],"names":["axios","ENDPOINTS","AlertHelper","ApiDelete","ApiPost","setAuthToken","setAlert","authActionCreator","store","loadUser","localStorage","token","res","get","dispatch","userLoaded","data","error","authError","registerAPI","params","register","body","errors","msg","alertType","registerUserSuccess","registerUserFailed","map","item","console","log","loginApi","login","loginSuccess","loginError","deleteAccountApi","deleteProfile","deleteAccountSuccess","deleteAccountError"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiDelete, ApiPost } from \"../../helpers/apiHelper\";\nimport setAuthToken from \"../../helpers/setAuthToken\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\n\nexport const loadUser = async () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"api/auth\");\n    store.dispatch(authActionCreator.userLoaded(res.data));\n  } catch (error) {\n    store.dispatch(authActionCreator.authError());\n  }\n};\n\nexport const registerAPI = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n    if (!res.errors) {\n      AlertHelper({\n        msg: \"User Registered Successfully\",\n        alertType: \"success\",\n      });\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.registerUserFailed());\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};\n\nexport const loginApi = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.login, params);\n    if (res.data) {\n      AlertHelper({\n        msg: \"User Login Successfully\",\n        alertType: \"success\",\n      });\n      store.dispatch(authActionCreator.loginSuccess(res.data));\n      store.dispatch(authActionCreator.loadUser());\n    } else {\n      store.dispatch(authActionCreator.loginError());\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {\n    store.dispatch(authActionCreator.loginError());\n  }\n};\n\nexport const deleteAccountApi = async () => {\n  try {\n    const res = await ApiDelete(ENDPOINTS.deleteProfile);\n    store.dispatch(authActionCreator.deleteAccountSuccess());\n  } catch (error) {\n    store.dispatch(authActionCreator.deleteAccountError());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}