{"ast":null,"code":"import _defineProperty from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import{globalConnect}from\"../../redux/connect/globalConnect\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddExperience(props){var _useState=useState({title:\"\",company:\"\",from:\"\",to:\"\",location:\"\",current:false,description:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _onChange=function onChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var submitForm=function submitForm(e){e.preventDefault();props.addExperience({formData:formData,history:props.history});};var title=formData.title,company=formData.company,from=formData.from,to=formData.to,location=formData.location,current=formData.current,description=formData.description;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{class:\"large text-primary\",children:\"Add An Experience\"}),/*#__PURE__*/_jsxs(\"p\",{class:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-code-branch\"}),\" Add any developer/programming positions that you have had in the past\"]}),/*#__PURE__*/_jsx(\"small\",{children:\"* = required field\"}),/*#__PURE__*/_jsxs(\"form\",{class:\"form\",onSubmit:function onSubmit(e){submitForm(e);},children:[/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"* Job Title\",name:\"title\",required:true,onChange:function onChange(e){return _onChange(e);},value:title})}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"* Company\",name:\"company\",required:true,onChange:function onChange(e){return _onChange(e);},value:company})}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Location\",name:\"location\",onChange:function onChange(e){return _onChange(e);},value:location})}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"From Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"from\",value:from,onChange:function onChange(e){return _onChange(e);}})]}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"current\",value:current,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{current:!current}));}}),\"Current Job\"]})}),/*#__PURE__*/_jsxs(\"div\",{class:\"form-group\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"To Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"to\",value:to,onChange:function onChange(e){return _onChange(e);}})]}),/*#__PURE__*/_jsx(\"div\",{class:\"form-group\",children:/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",cols:\"30\",rows:\"5\",placeholder:\"Job Description\",value:description,onChange:function onChange(e){return _onChange(e);}})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",class:\"btn btn-primary my-1\"}),/*#__PURE__*/_jsx(Link,{class:\"btn btn-light my-1\",to:\"/dashboard\",children:\"Go Back\"})]})]});}export default globalConnect()(AddExperience);","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/views/profile/addExperience.js"],"names":["React","Fragment","useState","globalConnect","Link","AddExperience","props","title","company","from","to","location","current","description","formData","setFormData","onChange","e","target","name","value","submitForm","preventDefault","addExperience","history"],"mappings":"qgBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,OAASC,aAAT,KAA8B,mCAA9B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,eACIJ,QAAQ,CAAC,CACvCK,KAAK,CAAE,EADgC,CAEvCC,OAAO,CAAE,EAF8B,CAGvCC,IAAI,CAAE,EAHiC,CAIvCC,EAAE,CAAE,EAJmC,CAKvCC,QAAQ,CAAE,EAL6B,CAMvCC,OAAO,CAAE,KAN8B,CAOvCC,WAAW,CAAE,EAP0B,CAAD,CADZ,wCACrBC,QADqB,eACXC,WADW,eAW5B,GAAMC,CAAAA,SAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBF,WAAW,gCACND,QADM,wBAERG,CAAC,CAACC,MAAF,CAASC,IAFD,CAEQF,CAAC,CAACC,MAAF,CAASE,KAFjB,GAAX,CAID,CALD,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACJ,CAAD,CAAO,CACxBA,CAAC,CAACK,cAAF,GACAhB,KAAK,CAACiB,aAAN,CAAoB,CAAET,QAAQ,CAARA,QAAF,CAAYU,OAAO,CAAElB,KAAK,CAACkB,OAA3B,CAApB,EACD,CAHD,CAlB4B,GAuBpBjB,CAAAA,KAvBoB,CAuByCO,QAvBzC,CAuBpBP,KAvBoB,CAuBbC,OAvBa,CAuByCM,QAvBzC,CAuBbN,OAvBa,CAuBJC,IAvBI,CAuByCK,QAvBzC,CAuBJL,IAvBI,CAuBEC,EAvBF,CAuByCI,QAvBzC,CAuBEJ,EAvBF,CAuBMC,QAvBN,CAuByCG,QAvBzC,CAuBMH,QAvBN,CAuBgBC,OAvBhB,CAuByCE,QAvBzC,CAuBgBF,OAvBhB,CAuByBC,WAvBzB,CAuByCC,QAvBzC,CAuByBD,WAvBzB,CAwB5B,mBACE,MAAC,QAAD,yBACE,WAAI,KAAK,CAAC,oBAAV,+BADF,cAEE,WAAG,KAAK,CAAC,MAAT,wBACE,UAAG,KAAK,CAAC,oBAAT,EADF,4EAFF,cAME,6CANF,cAOE,cACE,KAAK,CAAC,MADR,CAEE,QAAQ,CAAE,kBAACI,CAAD,CAAO,CACfI,UAAU,CAACJ,CAAD,CAAV,CACD,CAJH,wBAME,YAAK,KAAK,CAAC,YAAX,uBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,aAFd,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,KAJV,CAKE,QAAQ,CAAE,kBAACA,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EALZ,CAME,KAAK,CAAEV,KANT,EADF,EANF,cAgBE,YAAK,KAAK,CAAC,YAAX,uBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,WAFd,CAGE,IAAI,CAAC,SAHP,CAIE,QAAQ,KAJV,CAKE,QAAQ,CAAE,kBAACU,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EALZ,CAME,KAAK,CAAET,OANT,EADF,EAhBF,cA0BE,YAAK,KAAK,CAAC,YAAX,uBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,UAFd,CAGE,IAAI,CAAC,UAHP,CAIE,QAAQ,CAAE,kBAACS,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EAJZ,CAKE,KAAK,CAAEN,QALT,EADF,EA1BF,cAmCE,aAAK,KAAK,CAAC,YAAX,wBACE,iCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEF,IAHT,CAIE,QAAQ,CAAE,kBAACQ,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EAJZ,EAFF,GAnCF,cA4CE,YAAK,KAAK,CAAC,YAAX,uBACE,kCACE,cACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,SAFP,CAGE,KAAK,CAAEL,OAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QACRF,CAAAA,WAAW,gCACND,QADM,MAETF,OAAO,CAAE,CAACA,OAFD,GADH,EAJZ,EADF,iBADF,EA5CF,cA4DE,aAAK,KAAK,CAAC,YAAX,wBACE,+BADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,IAFP,CAGE,KAAK,CAAEF,EAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EAJZ,EAFF,GA5DF,cAqEE,YAAK,KAAK,CAAC,YAAX,uBACE,iBACE,IAAI,CAAC,aADP,CAEE,IAAI,CAAC,IAFP,CAGE,IAAI,CAAC,GAHP,CAIE,WAAW,CAAC,iBAJd,CAKE,KAAK,CAAEJ,WALT,CAME,QAAQ,CAAE,kBAACI,CAAD,QAAOD,CAAAA,SAAQ,CAACC,CAAD,CAAf,EANZ,EADF,EArEF,cA+EE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,sBAA3B,EA/EF,cAgFE,KAAC,IAAD,EAAM,KAAK,CAAC,oBAAZ,CAAiC,EAAE,CAAC,YAApC,qBAhFF,GAPF,GADF,CA8FD,CAID,cAAed,CAAAA,aAAa,GAAGE,aAAH,CAA5B","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { globalConnect } from \"../../redux/connect/globalConnect\";\nimport { Link } from \"react-router-dom\";\n\nfunction AddExperience(props) {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    company: \"\",\n    from: \"\",\n    to: \"\",\n    location: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    props.addExperience({ formData, history: props.history });\n  };\n\n  const { title, company, from, to, location, current, description } = formData;\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Add An Experience</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        class=\"form\"\n        onSubmit={(e) => {\n          submitForm(e);\n        }}\n      >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            required\n            onChange={(e) => onChange(e)}\n            value={title}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            required\n            onChange={(e) => onChange(e)}\n            value={company}\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            onChange={(e) => onChange(e)}\n            value={location}\n          />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              value={current}\n              onChange={(e) =>\n                setFormData({\n                  ...formData,\n                  current: !current,\n                })\n              }\n            />\n            Current Job\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n}\n\nAddExperience.propTypes = {};\n\nexport default globalConnect()(AddExperience);\n"]},"metadata":{},"sourceType":"module"}