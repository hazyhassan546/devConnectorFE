{"ast":null,"code":"import { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiPost } from \"../../helpers/apiHelper\";\nimport setAuthToken from \"../../helpers/setAuthToken\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\nexport const loadUser = async () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n};\nexport const registerAPI = async params => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n\n    if (!res.errors) {\n      AlertHelper({\n        msg: \"User Registered Successfully\",\n        alertType: \"success\"\n      });\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n    } else {\n      store.dispatch(authActionCreator.registerUserFailed());\n      res.errors.map(item => {\n        AlertHelper({\n          msg: item.msg,\n          alertType: \"danger\"\n        });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/hassanabbas/Desktop/Nodejs/DevConnector/client/src/redux/ApiCalls/authAPi.js"],"names":["ENDPOINTS","AlertHelper","ApiPost","setAuthToken","setAlert","authActionCreator","store","loadUser","localStorage","token","registerAPI","params","res","register","body","errors","msg","alertType","dispatch","registerUserSuccess","data","registerUserFailed","map","item","console","log","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBN,IAAAA,YAAY,CAACK,YAAY,CAACC,KAAd,CAAZ;AACD;AACF,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAC3C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,OAAO,CAACF,SAAS,CAACa,QAAX,EAAqBF,MAAM,CAACG,IAA5B,CAAzB;;AACA,QAAI,CAACF,GAAG,CAACG,MAAT,EAAiB;AACfd,MAAAA,WAAW,CAAC;AACVe,QAAAA,GAAG,EAAE,8BADK;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAD,CAAX;AAIAX,MAAAA,KAAK,CAACY,QAAN,CAAeb,iBAAiB,CAACc,mBAAlB,CAAsCP,GAAG,CAACQ,IAA1C,CAAf;AACD,KAND,MAMO;AACLd,MAAAA,KAAK,CAACY,QAAN,CAAeb,iBAAiB,CAACgB,kBAAlB,EAAf;AACAT,MAAAA,GAAG,CAACG,MAAJ,CAAWO,GAAX,CAAgBC,IAAD,IAAU;AACvBtB,QAAAA,WAAW,CAAC;AAAEe,UAAAA,GAAG,EAAEO,IAAI,CAACP,GAAZ;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAD,CAAX;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBb,GAAnB;AACD,OAHD;AAID;AACF,GAfD,CAeE,OAAOc,KAAP,EAAc,CAAE;AACnB,CAjBM","sourcesContent":["import { ENDPOINTS } from \"../../common/routes\";\nimport { AlertHelper } from \"../../helpers/alertHelper\";\nimport { ApiPost } from \"../../helpers/apiHelper\";\nimport setAuthToken from \"../../helpers/setAuthToken\";\nimport { setAlert } from \"../action/alert\";\nimport { authActionCreator } from \"../action/auth\";\nimport store from \"../store\";\n\nexport const loadUser = async () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n};\n\nexport const registerAPI = async (params) => {\n  try {\n    const res = await ApiPost(ENDPOINTS.register, params.body);\n    if (!res.errors) {\n      AlertHelper({\n        msg: \"User Registered Successfully\",\n        alertType: \"success\",\n      });\n      store.dispatch(authActionCreator.registerUserSuccess(res.data));\n    } else {\n      store.dispatch(authActionCreator.registerUserFailed());\n      res.errors.map((item) => {\n        AlertHelper({ msg: item.msg, alertType: \"danger\" });\n        console.log(\"any\", res);\n      });\n    }\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}